// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="DigitRec,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku5p-ffvb676-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.473594,HLS_SYN_LAT=-1898544292,HLS_SYN_TPT=none,HLS_SYN_MEM=289,HLS_SYN_DSP=4,HLS_SYN_FF=1198,HLS_SYN_LUT=2164,HLS_VERSION=2019_1}" *)

module DigitRec (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        array4_address0,
        array4_ce0,
        array4_q0,
        global_results_address0,
        global_results_ce0,
        global_results_we0,
        global_results_d0,
        num_training,
        num_test
);

parameter    ap_ST_fsm_state1 = 30'd1;
parameter    ap_ST_fsm_state2 = 30'd2;
parameter    ap_ST_fsm_state3 = 30'd4;
parameter    ap_ST_fsm_state4 = 30'd8;
parameter    ap_ST_fsm_state5 = 30'd16;
parameter    ap_ST_fsm_state6 = 30'd32;
parameter    ap_ST_fsm_state7 = 30'd64;
parameter    ap_ST_fsm_state8 = 30'd128;
parameter    ap_ST_fsm_state9 = 30'd256;
parameter    ap_ST_fsm_state10 = 30'd512;
parameter    ap_ST_fsm_state11 = 30'd1024;
parameter    ap_ST_fsm_state12 = 30'd2048;
parameter    ap_ST_fsm_state13 = 30'd4096;
parameter    ap_ST_fsm_state14 = 30'd8192;
parameter    ap_ST_fsm_state15 = 30'd16384;
parameter    ap_ST_fsm_state16 = 30'd32768;
parameter    ap_ST_fsm_state17 = 30'd65536;
parameter    ap_ST_fsm_state18 = 30'd131072;
parameter    ap_ST_fsm_state19 = 30'd262144;
parameter    ap_ST_fsm_state20 = 30'd524288;
parameter    ap_ST_fsm_state21 = 30'd1048576;
parameter    ap_ST_fsm_state22 = 30'd2097152;
parameter    ap_ST_fsm_state23 = 30'd4194304;
parameter    ap_ST_fsm_state24 = 30'd8388608;
parameter    ap_ST_fsm_state25 = 30'd16777216;
parameter    ap_ST_fsm_state26 = 30'd33554432;
parameter    ap_ST_fsm_state27 = 30'd67108864;
parameter    ap_ST_fsm_state28 = 30'd134217728;
parameter    ap_ST_fsm_state29 = 30'd268435456;
parameter    ap_ST_fsm_state30 = 30'd536870912;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [14:0] array4_address0;
output   array4_ce0;
input  [255:0] array4_q0;
output  [10:0] global_results_address0;
output   global_results_ce0;
output   global_results_we0;
output  [7:0] global_results_d0;
input  [31:0] num_training;
input  [31:0] num_test;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[14:0] array4_address0;
reg array4_ce0;
reg global_results_ce0;
reg global_results_we0;

(* fsm_encoding = "none" *) reg   [29:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [14:0] training_set_V_address0;
reg    training_set_V_ce0;
reg    training_set_V_we0;
wire   [255:0] training_set_V_q0;
reg   [10:0] test_set_V_address0;
reg    test_set_V_ce0;
reg    test_set_V_we0;
wire   [255:0] test_set_V_q0;
reg   [10:0] results_address0;
reg    results_ce0;
reg    results_we0;
wire   [7:0] results_q0;
wire   [14:0] i_fu_709_p2;
reg   [14:0] i_reg_1479;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln168_fu_715_p1;
reg   [63:0] zext_ln168_reg_1484;
wire   [0:0] icmp_ln165_fu_703_p2;
wire   [30:0] i_1_fu_729_p2;
reg   [30:0] i_1_reg_1497;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln172_fu_724_p2;
wire   [28:0] iter_cnt_fu_814_p2;
reg   [28:0] iter_cnt_reg_1507;
wire   [30:0] t_fu_834_p2;
reg   [30:0] t_reg_1515;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln184_fu_840_p1;
reg   [63:0] zext_ln184_reg_1520;
wire   [0:0] icmp_ln181_fu_829_p2;
reg   [255:0] test_instance_V_reg_1530;
wire    ap_CS_fsm_state7;
wire   [4:0] i_2_fu_851_p2;
wire    ap_CS_fsm_state8;
wire   [14:0] zext_ln193_fu_862_p1;
reg   [14:0] zext_ln193_reg_1543;
wire    ap_CS_fsm_state9;
wire   [28:0] zext_ln193_1_fu_866_p1;
reg   [28:0] zext_ln193_1_reg_1548;
wire   [0:0] icmp_ln193_fu_870_p2;
reg   [0:0] icmp_ln193_reg_1553;
wire   [10:0] i_4_fu_876_p2;
reg   [10:0] i_4_reg_1557;
wire   [3:0] j_fu_892_p2;
reg   [3:0] j_reg_1565;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln195_fu_886_p2;
wire   [5:0] sub_ln1357_fu_916_p2;
reg   [5:0] sub_ln1357_reg_1575;
wire   [255:0] ret_V_fu_926_p2;
reg   [255:0] ret_V_reg_1584;
wire    ap_CS_fsm_state11;
wire   [8:0] i_5_fu_941_p2;
wire    ap_CS_fsm_state12;
wire   [8:0] cnt_fu_958_p2;
wire   [0:0] icmp_ln17_fu_935_p2;
wire   [31:0] zext_ln35_fu_964_p1;
reg   [31:0] zext_ln35_reg_1602;
wire   [31:0] zext_ln45_fu_968_p1;
reg   [31:0] zext_ln45_reg_1607;
wire    ap_CS_fsm_state13;
wire   [1:0] k_fu_978_p2;
reg   [1:0] k_reg_1615;
wire   [0:0] icmp_ln42_fu_972_p2;
wire   [14:0] add_ln195_fu_1022_p2;
wire   [31:0] select_ln43_fu_1038_p3;
wire    ap_CS_fsm_state14;
wire   [31:0] select_ln43_1_fu_1046_p3;
wire   [1:0] i_6_fu_1059_p2;
wire    ap_CS_fsm_state15;
wire   [3:0] i_7_fu_1091_p2;
wire    ap_CS_fsm_state16;
wire   [3:0] i_9_fu_1118_p2;
reg   [3:0] i_9_reg_1662;
wire    ap_CS_fsm_state17;
wire   [6:0] sub_ln100_fu_1136_p2;
reg   [6:0] sub_ln100_reg_1667;
wire   [0:0] icmp_ln94_fu_1112_p2;
wire   [31:0] zext_ln111_fu_1142_p1;
reg   [31:0] zext_ln111_reg_1672;
wire   [1:0] j_1_fu_1156_p2;
reg   [1:0] j_1_reg_1680;
wire    ap_CS_fsm_state18;
wire   [0:0] icmp_ln95_fu_1150_p2;
wire  signed [31:0] sext_ln100_1_fu_1176_p1;
reg  signed [31:0] sext_ln100_1_reg_1690;
wire    ap_CS_fsm_state19;
wire   [31:0] zext_ln98_fu_1180_p1;
reg   [31:0] zext_ln98_reg_1696;
wire    ap_CS_fsm_state20;
wire   [1:0] r_fu_1190_p2;
reg   [1:0] r_reg_1704;
wire   [0:0] icmp_ln98_fu_1184_p2;
reg   [3:0] array3_addr_7_reg_1714;
reg   [3:0] array3_addr_8_reg_1719;
wire   [31:0] pos_fu_1249_p3;
wire    ap_CS_fsm_state21;
wire   [1:0] r_1_fu_1263_p2;
reg   [1:0] r_1_reg_1732;
wire    ap_CS_fsm_state22;
wire   [0:0] icmp_ln104_fu_1257_p2;
wire   [0:0] icmp_ln106_fu_1273_p2;
reg   [0:0] icmp_ln106_reg_1739;
wire   [1:0] i_8_fu_1344_p2;
reg   [1:0] i_8_reg_1759;
wire    ap_CS_fsm_state24;
wire   [0:0] icmp_ln118_fu_1338_p2;
reg   [3:0] array3_addr_4_reg_1769;
wire    ap_CS_fsm_state25;
wire   [3:0] i_10_fu_1393_p2;
reg   [3:0] i_10_reg_1778;
wire    ap_CS_fsm_state27;
wire   [0:0] icmp_ln127_fu_1387_p2;
wire   [7:0] select_ln129_fu_1435_p3;
wire    ap_CS_fsm_state28;
wire   [30:0] i_3_fu_1452_p2;
reg   [30:0] i_3_reg_1801;
wire    ap_CS_fsm_state29;
wire   [63:0] zext_ln218_fu_1458_p1;
reg   [63:0] zext_ln218_reg_1806;
wire   [0:0] icmp_ln215_fu_1447_p2;
reg   [3:0] array3_address0;
reg    array3_ce0;
reg    array3_we0;
reg   [31:0] array3_d0;
wire   [31:0] array3_q0;
reg   [3:0] array3_address1;
reg    array3_ce1;
reg    array3_we1;
reg   [31:0] array3_d1;
wire   [31:0] array3_q1;
reg   [4:0] knn_set_address0;
reg    knn_set_ce0;
reg    knn_set_we0;
reg   [10:0] knn_set_d0;
wire   [10:0] knn_set_q0;
reg   [14:0] i_0_reg_441;
wire    ap_CS_fsm_state3;
reg   [30:0] i1_0_reg_452;
wire    ap_CS_fsm_state5;
reg   [30:0] t_0_reg_464;
reg   [4:0] i2_0_reg_475;
wire   [0:0] icmp_ln187_fu_845_p2;
reg   [10:0] i3_0_reg_486;
wire   [0:0] icmp_ln205_fu_922_p2;
reg   [14:0] indvars_iv_reg_497;
reg   [3:0] j_0_reg_509;
reg   [8:0] dist_reg_520;
reg   [8:0] bvh_d_index_reg_532;
reg   [31:0] max_dist_0_i_reg_543;
reg   [31:0] max_dist_id_0_i_reg_555;
reg   [1:0] max_dist_id_reg_567;
reg   [1:0] i_0_i_reg_578;
wire   [0:0] icmp_ln81_fu_1053_p2;
reg   [3:0] i1_0_i_reg_589;
wire   [0:0] icmp_ln87_fu_1085_p2;
reg   [3:0] i2_0_i_reg_600;
reg   [1:0] j_0_i_reg_611;
reg   [1:0] r_0_i_reg_622;
reg   [31:0] pos_0_i_reg_633;
reg   [1:0] r3_0_i_reg_645;
wire    ap_CS_fsm_state23;
reg   [1:0] i4_0_i_reg_656;
wire    ap_CS_fsm_state26;
reg   [7:0] max_vote_reg_667;
reg   [3:0] i5_0_i_reg_680;
reg   [30:0] i4_0_reg_692;
wire    ap_CS_fsm_state30;
wire  signed [63:0] sext_ln321_fu_745_p1;
wire   [63:0] zext_ln175_fu_820_p1;
wire   [63:0] zext_ln190_fu_857_p1;
wire   [63:0] zext_ln199_fu_903_p1;
wire   [63:0] zext_ln43_1_fu_993_p1;
wire  signed [63:0] sext_ln51_fu_1012_p1;
wire   [0:0] icmp_ln50_fu_998_p2;
wire   [63:0] zext_ln83_fu_1065_p1;
wire   [63:0] zext_ln84_fu_1080_p1;
wire   [63:0] zext_ln89_fu_1103_p1;
wire   [63:0] zext_ln100_fu_1171_p1;
wire   [63:0] zext_ln100_1_fu_1196_p1;
wire   [63:0] zext_ln110_fu_1201_p1;
wire  signed [63:0] sext_ln111_fu_1216_p1;
wire  signed [63:0] sext_ln107_fu_1291_p1;
wire   [63:0] zext_ln108_1_fu_1306_p1;
wire   [63:0] zext_ln107_fu_1311_p1;
wire   [63:0] zext_ln108_2_fu_1328_p1;
wire   [63:0] zext_ln120_1_fu_1360_p1;
wire  signed [63:0] sext_ln120_fu_1375_p1;
wire   [63:0] zext_ln129_fu_1405_p1;
wire  signed [63:0] sext_ln129_fu_1420_p1;
wire   [10:0] zext_ln51_fu_1017_p1;
wire   [0:0] icmp_ln109_fu_1279_p2;
wire   [31:0] zext_ln108_fu_1333_p1;
wire   [31:0] add_ln120_fu_1380_p2;
wire   [31:0] zext_ln172_fu_720_p1;
wire   [15:0] trunc_ln321_fu_735_p1;
wire   [15:0] add_ln321_fu_739_p2;
wire  signed [31:0] sext_ln178_fu_750_p0;
wire  signed [31:0] mul_ln178_fu_753_p0;
wire   [64:0] mul_ln178_fu_753_p2;
wire  signed [31:0] tmp_7_fu_765_p1;
wire   [64:0] sub_ln178_fu_759_p2;
wire   [0:0] tmp_7_fu_765_p3;
wire   [28:0] tmp_8_fu_772_p4;
wire   [28:0] tmp_9_fu_782_p4;
wire   [28:0] select_ln178_fu_792_p3;
wire   [28:0] sub_ln178_1_fu_800_p2;
wire   [28:0] select_ln178_1_fu_806_p3;
wire   [31:0] zext_ln181_fu_825_p1;
wire   [14:0] add_ln199_fu_898_p2;
wire   [5:0] shl_ln_fu_908_p3;
wire   [5:0] zext_ln1357_fu_882_p1;
wire   [31:0] zext_ln35_1_fu_931_p1;
wire   [0:0] p_Result_s_fu_947_p3;
wire   [8:0] zext_ln18_fu_954_p1;
wire   [5:0] zext_ln43_fu_984_p1;
wire   [5:0] add_ln43_fu_988_p2;
wire   [5:0] trunc_ln51_fu_1003_p1;
wire   [5:0] add_ln51_fu_1007_p2;
wire  signed [31:0] max_dist_fu_1028_p1;
wire   [0:0] icmp_ln43_fu_1032_p2;
wire   [2:0] zext_ln83_1_fu_1070_p1;
wire   [2:0] add_ln84_fu_1074_p2;
wire   [3:0] add_ln89_fu_1097_p2;
wire   [5:0] shl_ln1_fu_1124_p3;
wire   [6:0] zext_ln100_2_fu_1132_p1;
wire   [6:0] zext_ln94_fu_1108_p1;
wire   [6:0] zext_ln95_fu_1146_p1;
wire   [6:0] add_ln100_fu_1162_p2;
wire  signed [31:0] sext_ln100_fu_1167_p1;
wire   [5:0] trunc_ln110_fu_1206_p1;
wire   [5:0] add_ln111_fu_1210_p2;
wire   [29:0] tmp_10_fu_1226_p4;
wire   [0:0] icmp_ln100_1_fu_1236_p2;
wire   [0:0] icmp_ln100_fu_1221_p2;
wire   [31:0] phitmp_i_fu_1242_p3;
wire   [31:0] zext_ln106_fu_1269_p1;
wire  signed [1:0] xor_ln107_fu_1285_p2;
wire  signed [2:0] sext_ln107_1_fu_1296_p1;
wire   [2:0] add_ln108_fu_1300_p2;
wire   [2:0] zext_ln107_1_fu_1315_p1;
wire   [2:0] add_ln108_1_fu_1322_p2;
wire   [5:0] trunc_ln108_fu_1318_p1;
wire   [2:0] zext_ln120_fu_1350_p1;
wire   [2:0] add_ln120_1_fu_1354_p2;
wire   [5:0] trunc_ln120_fu_1365_p1;
wire   [5:0] add_ln120_2_fu_1369_p2;
wire   [3:0] add_ln129_fu_1399_p2;
wire   [5:0] trunc_ln129_fu_1410_p1;
wire   [5:0] add_ln129_1_fu_1414_p2;
wire   [0:0] icmp_ln129_fu_1425_p2;
wire   [7:0] max_vote_1_fu_1431_p1;
wire   [31:0] zext_ln215_fu_1443_p1;
reg   [29:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 30'd1;
end

DigitRec_trainingbkb #(
    .DataWidth( 256 ),
    .AddressRange( 18000 ),
    .AddressWidth( 15 ))
training_set_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_set_V_address0),
    .ce0(training_set_V_ce0),
    .we0(training_set_V_we0),
    .d0(array4_q0),
    .q0(training_set_V_q0)
);

DigitRec_test_set_V #(
    .DataWidth( 256 ),
    .AddressRange( 2000 ),
    .AddressWidth( 11 ))
test_set_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(test_set_V_address0),
    .ce0(test_set_V_ce0),
    .we0(test_set_V_we0),
    .d0(array4_q0),
    .q0(test_set_V_q0)
);

DigitRec_results #(
    .DataWidth( 8 ),
    .AddressRange( 2000 ),
    .AddressWidth( 11 ))
results_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(results_address0),
    .ce0(results_ce0),
    .we0(results_we0),
    .d0(max_vote_reg_667),
    .q0(results_q0)
);

DigitRec_array3 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
array3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(array3_address0),
    .ce0(array3_ce0),
    .we0(array3_we0),
    .d0(array3_d0),
    .q0(array3_q0),
    .address1(array3_address1),
    .ce1(array3_ce1),
    .we1(array3_we1),
    .d1(array3_d1),
    .q1(array3_q1)
);

DigitRec_knn_set #(
    .DataWidth( 11 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
knn_set_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(knn_set_address0),
    .ce0(knn_set_ce0),
    .we0(knn_set_we0),
    .d0(knn_set_d0),
    .q0(knn_set_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln17_fu_935_p2 == 1'd0))) begin
        bvh_d_index_reg_532 <= i_5_fu_941_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        bvh_d_index_reg_532 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln17_fu_935_p2 == 1'd0))) begin
        dist_reg_520 <= cnt_fu_958_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dist_reg_520 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln81_fu_1053_p2 == 1'd1))) begin
        i1_0_i_reg_589 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln87_fu_1085_p2 == 1'd0))) begin
        i1_0_i_reg_589 <= i_7_fu_1091_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln165_fu_703_p2 == 1'd1))) begin
        i1_0_reg_452 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i1_0_reg_452 <= i_1_reg_1497;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln87_fu_1085_p2 == 1'd1))) begin
        i2_0_i_reg_600 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln95_fu_1150_p2 == 1'd1))) begin
        i2_0_i_reg_600 <= i_9_reg_1662;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln187_fu_845_p2 == 1'd0))) begin
        i2_0_reg_475 <= i_2_fu_851_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i2_0_reg_475 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln187_fu_845_p2 == 1'd1))) begin
        i3_0_reg_486 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln195_fu_886_p2 == 1'd1) & (icmp_ln205_fu_922_p2 == 1'd0) & (icmp_ln193_reg_1553 == 1'd0))) begin
        i3_0_reg_486 <= i_4_reg_1557;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln94_fu_1112_p2 == 1'd1))) begin
        i4_0_i_reg_656 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        i4_0_i_reg_656 <= i_8_reg_1759;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln181_fu_829_p2 == 1'd0))) begin
        i4_0_reg_692 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        i4_0_reg_692 <= i_3_reg_1801;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln118_fu_1338_p2 == 1'd1))) begin
        i5_0_i_reg_680 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        i5_0_i_reg_680 <= i_10_reg_1778;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln81_fu_1053_p2 == 1'd0))) begin
        i_0_i_reg_578 <= i_6_fu_1059_p2;
    end else if (((1'b1 == ap_CS_fsm_state10) & ((icmp_ln193_reg_1553 == 1'd1) | ((icmp_ln205_fu_922_p2 == 1'd1) & (icmp_ln195_fu_886_p2 == 1'd1))))) begin
        i_0_i_reg_578 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_0_reg_441 <= i_reg_1479;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_441 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln193_fu_870_p2 == 1'd0))) begin
        indvars_iv_reg_497 <= 15'd0;
    end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln42_fu_972_p2 == 1'd1))) begin
        indvars_iv_reg_497 <= add_ln195_fu_1022_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln104_fu_1257_p2 == 1'd1))) begin
        j_0_i_reg_611 <= j_1_reg_1680;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln94_fu_1112_p2 == 1'd0))) begin
        j_0_i_reg_611 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln193_fu_870_p2 == 1'd0))) begin
        j_0_reg_509 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln42_fu_972_p2 == 1'd1))) begin
        j_0_reg_509 <= j_reg_1565;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln17_fu_935_p2 == 1'd1))) begin
        max_dist_0_i_reg_543 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_dist_0_i_reg_543 <= select_ln43_fu_1038_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln17_fu_935_p2 == 1'd1))) begin
        max_dist_id_0_i_reg_555 <= 32'd4;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_dist_id_0_i_reg_555 <= select_ln43_1_fu_1046_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln17_fu_935_p2 == 1'd1))) begin
        max_dist_id_reg_567 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_dist_id_reg_567 <= k_reg_1615;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln118_fu_1338_p2 == 1'd1))) begin
        max_vote_reg_667 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        max_vote_reg_667 <= select_ln129_fu_1435_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        pos_0_i_reg_633 <= pos_fu_1249_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        pos_0_i_reg_633 <= 32'd1000;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln98_fu_1184_p2 == 1'd1))) begin
        r3_0_i_reg_645 <= 2'd3;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        r3_0_i_reg_645 <= r_1_reg_1732;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        r_0_i_reg_622 <= r_reg_1704;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        r_0_i_reg_622 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln127_fu_1387_p2 == 1'd1))) begin
        t_0_reg_464 <= t_reg_1515;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln172_fu_724_p2 == 1'd0))) begin
        t_0_reg_464 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        array3_addr_4_reg_1769 <= sext_ln120_fu_1375_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln98_fu_1184_p2 == 1'd1))) begin
        array3_addr_7_reg_1714 <= zext_ln110_fu_1201_p1;
        array3_addr_8_reg_1719 <= sext_ln111_fu_1216_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        i_10_reg_1778 <= i_10_fu_1393_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_1_reg_1497 <= i_1_fu_729_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        i_3_reg_1801 <= i_3_fu_1452_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i_4_reg_1557 <= i_4_fu_876_p2;
        icmp_ln193_reg_1553 <= icmp_ln193_fu_870_p2;
        zext_ln193_1_reg_1548[10 : 0] <= zext_ln193_1_fu_866_p1[10 : 0];
        zext_ln193_reg_1543[10 : 0] <= zext_ln193_fu_862_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        i_8_reg_1759 <= i_8_fu_1344_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_9_reg_1662 <= i_9_fu_1118_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1479 <= i_fu_709_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln104_fu_1257_p2 == 1'd0))) begin
        icmp_ln106_reg_1739 <= icmp_ln106_fu_1273_p2;
        r_1_reg_1732 <= r_1_fu_1263_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln172_fu_724_p2 == 1'd0))) begin
        iter_cnt_reg_1507 <= iter_cnt_fu_814_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        j_1_reg_1680 <= j_1_fu_1156_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln193_reg_1553 == 1'd0))) begin
        j_reg_1565 <= j_fu_892_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        k_reg_1615 <= k_fu_978_p2;
        zext_ln45_reg_1607[1 : 0] <= zext_ln45_fu_968_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        r_reg_1704 <= r_fu_1190_p2;
        zext_ln98_reg_1696[1 : 0] <= zext_ln98_fu_1180_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ret_V_reg_1584 <= ret_V_fu_926_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        sext_ln100_1_reg_1690 <= sext_ln100_1_fu_1176_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln94_fu_1112_p2 == 1'd0))) begin
        sub_ln100_reg_1667 <= sub_ln100_fu_1136_p2;
        zext_ln111_reg_1672[3 : 0] <= zext_ln111_fu_1142_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln195_fu_886_p2 == 1'd0) & (icmp_ln193_reg_1553 == 1'd0))) begin
        sub_ln1357_reg_1575 <= sub_ln1357_fu_916_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        t_reg_1515 <= t_fu_834_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        test_instance_V_reg_1530 <= test_set_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln165_fu_703_p2 == 1'd0))) begin
        zext_ln168_reg_1484[14 : 0] <= zext_ln168_fu_715_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln181_fu_829_p2 == 1'd1))) begin
        zext_ln184_reg_1520[30 : 0] <= zext_ln184_fu_840_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln215_fu_1447_p2 == 1'd1))) begin
        zext_ln218_reg_1806[30 : 0] <= zext_ln218_fu_1458_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln17_fu_935_p2 == 1'd1))) begin
        zext_ln35_reg_1602[8 : 0] <= zext_ln35_fu_964_p1[8 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln215_fu_1447_p2 == 1'd0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln215_fu_1447_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        array3_address0 = sext_ln129_fu_1420_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        array3_address0 = array3_addr_4_reg_1769;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        array3_address0 = zext_ln120_1_fu_1360_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        array3_address0 = zext_ln107_fu_1311_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln106_fu_1273_p2 == 1'd1) & (icmp_ln104_fu_1257_p2 == 1'd0))) begin
        array3_address0 = sext_ln107_fu_1291_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln109_fu_1279_p2 == 1'd1) & (icmp_ln106_fu_1273_p2 == 1'd0) & (icmp_ln104_fu_1257_p2 == 1'd0))) begin
        array3_address0 = array3_addr_7_reg_1714;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        array3_address0 = zext_ln89_fu_1103_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        array3_address0 = zext_ln83_fu_1065_p1;
    end else begin
        array3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        array3_address1 = zext_ln129_fu_1405_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        array3_address1 = sext_ln120_fu_1375_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        array3_address1 = zext_ln108_2_fu_1328_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln106_fu_1273_p2 == 1'd1) & (icmp_ln104_fu_1257_p2 == 1'd0))) begin
        array3_address1 = zext_ln108_1_fu_1306_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln109_fu_1279_p2 == 1'd1) & (icmp_ln106_fu_1273_p2 == 1'd0) & (icmp_ln104_fu_1257_p2 == 1'd0))) begin
        array3_address1 = array3_addr_8_reg_1719;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        array3_address1 = zext_ln100_1_fu_1196_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        array3_address1 = zext_ln84_fu_1080_p1;
    end else begin
        array3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state22) & (icmp_ln109_fu_1279_p2 == 1'd1) & (icmp_ln106_fu_1273_p2 == 1'd0) & (icmp_ln104_fu_1257_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state22) & (icmp_ln106_fu_1273_p2 == 1'd1) & (icmp_ln104_fu_1257_p2 == 1'd0)))) begin
        array3_ce0 = 1'b1;
    end else begin
        array3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state22) & (icmp_ln109_fu_1279_p2 == 1'd1) & (icmp_ln106_fu_1273_p2 == 1'd0) & (icmp_ln104_fu_1257_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state22) & (icmp_ln106_fu_1273_p2 == 1'd1) & (icmp_ln104_fu_1257_p2 == 1'd0)))) begin
        array3_ce1 = 1'b1;
    end else begin
        array3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        array3_d0 = add_ln120_fu_1380_p2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        array3_d0 = array3_q0;
    end else if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln109_fu_1279_p2 == 1'd1) & (icmp_ln106_fu_1273_p2 == 1'd0) & (icmp_ln104_fu_1257_p2 == 1'd0))) begin
        array3_d0 = sext_ln100_1_reg_1690;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        array3_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        array3_d0 = 32'd256;
    end else begin
        array3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        array3_d1 = zext_ln108_fu_1333_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln109_fu_1279_p2 == 1'd1) & (icmp_ln106_fu_1273_p2 == 1'd0) & (icmp_ln104_fu_1257_p2 == 1'd0))) begin
        array3_d1 = zext_ln111_reg_1672;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        array3_d1 = 32'd9;
    end else begin
        array3_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_state23) & (icmp_ln106_reg_1739 == 1'd1)) | ((1'b1 == ap_CS_fsm_state22) & (icmp_ln109_fu_1279_p2 == 1'd1) & (icmp_ln106_fu_1273_p2 == 1'd0) & (icmp_ln104_fu_1257_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln87_fu_1085_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state15) & (icmp_ln81_fu_1053_p2 == 1'd0)))) begin
        array3_we0 = 1'b1;
    end else begin
        array3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state23) & (icmp_ln106_reg_1739 == 1'd1)) | ((1'b1 == ap_CS_fsm_state22) & (icmp_ln109_fu_1279_p2 == 1'd1) & (icmp_ln106_fu_1273_p2 == 1'd0) & (icmp_ln104_fu_1257_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state15) & (icmp_ln81_fu_1053_p2 == 1'd0)))) begin
        array3_we1 = 1'b1;
    end else begin
        array3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        array4_address0 = sext_ln321_fu_745_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        array4_address0 = zext_ln168_fu_715_p1;
    end else begin
        array4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        array4_ce0 = 1'b1;
    end else begin
        array4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        global_results_ce0 = 1'b1;
    end else begin
        global_results_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        global_results_we0 = 1'b1;
    end else begin
        global_results_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        knn_set_address0 = zext_ln100_fu_1171_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln50_fu_998_p2 == 1'd1) & (icmp_ln42_fu_972_p2 == 1'd1))) begin
        knn_set_address0 = sext_ln51_fu_1012_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln42_fu_972_p2 == 1'd0))) begin
        knn_set_address0 = zext_ln43_1_fu_993_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        knn_set_address0 = zext_ln190_fu_857_p1;
    end else begin
        knn_set_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state13) & (icmp_ln50_fu_998_p2 == 1'd1) & (icmp_ln42_fu_972_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state13) & (icmp_ln42_fu_972_p2 == 1'd0)))) begin
        knn_set_ce0 = 1'b1;
    end else begin
        knn_set_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln50_fu_998_p2 == 1'd1) & (icmp_ln42_fu_972_p2 == 1'd1))) begin
        knn_set_d0 = zext_ln51_fu_1017_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        knn_set_d0 = 11'd256;
    end else begin
        knn_set_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state13) & (icmp_ln50_fu_998_p2 == 1'd1) & (icmp_ln42_fu_972_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state8) & (icmp_ln187_fu_845_p2 == 1'd0)))) begin
        knn_set_we0 = 1'b1;
    end else begin
        knn_set_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        results_address0 = zext_ln218_fu_1458_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        results_address0 = zext_ln184_reg_1520;
    end else begin
        results_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27))) begin
        results_ce0 = 1'b1;
    end else begin
        results_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln127_fu_1387_p2 == 1'd1))) begin
        results_we0 = 1'b1;
    end else begin
        results_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        test_set_V_address0 = zext_ln184_fu_840_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        test_set_V_address0 = zext_ln175_fu_820_p1;
    end else begin
        test_set_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        test_set_V_ce0 = 1'b1;
    end else begin
        test_set_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        test_set_V_we0 = 1'b1;
    end else begin
        test_set_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        training_set_V_address0 = zext_ln199_fu_903_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        training_set_V_address0 = zext_ln168_reg_1484;
    end else begin
        training_set_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10))) begin
        training_set_V_ce0 = 1'b1;
    end else begin
        training_set_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        training_set_V_we0 = 1'b1;
    end else begin
        training_set_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln165_fu_703_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln172_fu_724_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln181_fu_829_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln187_fu_845_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & ((icmp_ln193_reg_1553 == 1'd1) | ((icmp_ln205_fu_922_p2 == 1'd1) & (icmp_ln195_fu_886_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln195_fu_886_p2 == 1'd1) & (icmp_ln205_fu_922_p2 == 1'd0) & (icmp_ln193_reg_1553 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln17_fu_935_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln42_fu_972_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln81_fu_1053_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln87_fu_1085_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln94_fu_1112_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln95_fu_1150_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln98_fu_1184_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln104_fu_1257_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln118_fu_1338_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln127_fu_1387_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln215_fu_1447_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln100_fu_1162_p2 = (sub_ln100_reg_1667 + zext_ln95_fu_1146_p1);

assign add_ln108_1_fu_1322_p2 = (3'd3 + zext_ln107_1_fu_1315_p1);

assign add_ln108_fu_1300_p2 = ($signed(3'd3) + $signed(sext_ln107_1_fu_1296_p1));

assign add_ln111_fu_1210_p2 = (6'd3 + trunc_ln110_fu_1206_p1);

assign add_ln120_1_fu_1354_p2 = (3'd3 + zext_ln120_fu_1350_p1);

assign add_ln120_2_fu_1369_p2 = (6'd6 + trunc_ln120_fu_1365_p1);

assign add_ln120_fu_1380_p2 = (32'd1 + array3_q1);

assign add_ln129_1_fu_1414_p2 = (6'd6 + trunc_ln129_fu_1410_p1);

assign add_ln129_fu_1399_p2 = (4'd6 + i5_0_i_reg_680);

assign add_ln195_fu_1022_p2 = (indvars_iv_reg_497 + 15'd1800);

assign add_ln199_fu_898_p2 = (indvars_iv_reg_497 + zext_ln193_reg_1543);

assign add_ln321_fu_739_p2 = (16'd18000 + trunc_ln321_fu_735_p1);

assign add_ln43_fu_988_p2 = (sub_ln1357_reg_1575 + zext_ln43_fu_984_p1);

assign add_ln51_fu_1007_p2 = (trunc_ln51_fu_1003_p1 + sub_ln1357_reg_1575);

assign add_ln84_fu_1074_p2 = (zext_ln83_1_fu_1070_p1 + 3'd3);

assign add_ln89_fu_1097_p2 = (i1_0_i_reg_589 + 4'd6);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign cnt_fu_958_p2 = (zext_ln18_fu_954_p1 + dist_reg_520);

assign global_results_address0 = zext_ln218_reg_1806;

assign global_results_d0 = results_q0;

assign i_10_fu_1393_p2 = (i5_0_i_reg_680 + 4'd1);

assign i_1_fu_729_p2 = (i1_0_reg_452 + 31'd1);

assign i_2_fu_851_p2 = (i2_0_reg_475 + 5'd1);

assign i_3_fu_1452_p2 = (i4_0_reg_692 + 31'd1);

assign i_4_fu_876_p2 = (i3_0_reg_486 + 11'd1);

assign i_5_fu_941_p2 = (bvh_d_index_reg_532 + 9'd1);

assign i_6_fu_1059_p2 = (i_0_i_reg_578 + 2'd1);

assign i_7_fu_1091_p2 = (i1_0_i_reg_589 + 4'd1);

assign i_8_fu_1344_p2 = (i4_0_i_reg_656 + 2'd1);

assign i_9_fu_1118_p2 = (i2_0_i_reg_600 + 4'd1);

assign i_fu_709_p2 = (i_0_reg_441 + 15'd1);

assign icmp_ln100_1_fu_1236_p2 = (($signed(tmp_10_fu_1226_p4) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp_ln100_fu_1221_p2 = (($signed(sext_ln100_1_reg_1690) < $signed(array3_q1)) ? 1'b1 : 1'b0);

assign icmp_ln104_fu_1257_p2 = ((r3_0_i_reg_645 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln106_fu_1273_p2 = (($signed(zext_ln106_fu_1269_p1) > $signed(pos_0_i_reg_633)) ? 1'b1 : 1'b0);

assign icmp_ln109_fu_1279_p2 = ((zext_ln106_fu_1269_p1 == pos_0_i_reg_633) ? 1'b1 : 1'b0);

assign icmp_ln118_fu_1338_p2 = ((i4_0_i_reg_656 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln127_fu_1387_p2 = ((i5_0_i_reg_680 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln129_fu_1425_p2 = (($signed(array3_q1) < $signed(array3_q0)) ? 1'b1 : 1'b0);

assign icmp_ln165_fu_703_p2 = ((i_0_reg_441 == 15'd18000) ? 1'b1 : 1'b0);

assign icmp_ln172_fu_724_p2 = (($signed(zext_ln172_fu_720_p1) < $signed(num_test)) ? 1'b1 : 1'b0);

assign icmp_ln17_fu_935_p2 = ((bvh_d_index_reg_532 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln181_fu_829_p2 = (($signed(zext_ln181_fu_825_p1) < $signed(num_test)) ? 1'b1 : 1'b0);

assign icmp_ln187_fu_845_p2 = ((i2_0_reg_475 == 5'd30) ? 1'b1 : 1'b0);

assign icmp_ln193_fu_870_p2 = ((i3_0_reg_486 == 11'd1800) ? 1'b1 : 1'b0);

assign icmp_ln195_fu_886_p2 = ((j_0_reg_509 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln205_fu_922_p2 = ((zext_ln193_1_reg_1548 == iter_cnt_reg_1507) ? 1'b1 : 1'b0);

assign icmp_ln215_fu_1447_p2 = (($signed(zext_ln215_fu_1443_p1) < $signed(num_test)) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_972_p2 = ((max_dist_id_reg_567 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_1032_p2 = (($signed(max_dist_fu_1028_p1) > $signed(max_dist_0_i_reg_543)) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_998_p2 = (($signed(zext_ln35_reg_1602) < $signed(max_dist_0_i_reg_543)) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_1053_p2 = ((i_0_i_reg_578 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_1085_p2 = ((i1_0_i_reg_589 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_1112_p2 = ((i2_0_i_reg_600 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_1150_p2 = ((j_0_i_reg_611 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_1184_p2 = ((r_0_i_reg_622 == 2'd3) ? 1'b1 : 1'b0);

assign iter_cnt_fu_814_p2 = ($signed(select_ln178_1_fu_806_p3) + $signed(29'd536870911));

assign j_1_fu_1156_p2 = (j_0_i_reg_611 + 2'd1);

assign j_fu_892_p2 = (j_0_reg_509 + 4'd1);

assign k_fu_978_p2 = (max_dist_id_reg_567 + 2'd1);

assign max_dist_fu_1028_p1 = $signed(knn_set_q0);

assign max_vote_1_fu_1431_p1 = i5_0_i_reg_680;

assign mul_ln178_fu_753_p0 = sext_ln178_fu_750_p0;

assign mul_ln178_fu_753_p2 = ($signed(mul_ln178_fu_753_p0) * $signed(65'h19999999A));

assign p_Result_s_fu_947_p3 = ret_V_reg_1584[zext_ln35_1_fu_931_p1];

assign phitmp_i_fu_1242_p3 = ((icmp_ln100_1_fu_1236_p2[0:0] === 1'b1) ? zext_ln98_reg_1696 : pos_0_i_reg_633);

assign pos_fu_1249_p3 = ((icmp_ln100_fu_1221_p2[0:0] === 1'b1) ? phitmp_i_fu_1242_p3 : pos_0_i_reg_633);

assign r_1_fu_1263_p2 = ($signed(r3_0_i_reg_645) + $signed(2'd3));

assign r_fu_1190_p2 = (r_0_i_reg_622 + 2'd1);

assign ret_V_fu_926_p2 = (training_set_V_q0 ^ test_instance_V_reg_1530);

assign select_ln129_fu_1435_p3 = ((icmp_ln129_fu_1425_p2[0:0] === 1'b1) ? max_vote_reg_667 : max_vote_1_fu_1431_p1);

assign select_ln178_1_fu_806_p3 = ((tmp_7_fu_765_p3[0:0] === 1'b1) ? sub_ln178_1_fu_800_p2 : tmp_9_fu_782_p4);

assign select_ln178_fu_792_p3 = ((tmp_7_fu_765_p3[0:0] === 1'b1) ? tmp_8_fu_772_p4 : tmp_9_fu_782_p4);

assign select_ln43_1_fu_1046_p3 = ((icmp_ln43_fu_1032_p2[0:0] === 1'b1) ? zext_ln45_reg_1607 : max_dist_id_0_i_reg_555);

assign select_ln43_fu_1038_p3 = ((icmp_ln43_fu_1032_p2[0:0] === 1'b1) ? max_dist_fu_1028_p1 : max_dist_0_i_reg_543);

assign sext_ln100_1_fu_1176_p1 = $signed(knn_set_q0);

assign sext_ln100_fu_1167_p1 = $signed(add_ln100_fu_1162_p2);

assign sext_ln107_1_fu_1296_p1 = xor_ln107_fu_1285_p2;

assign sext_ln107_fu_1291_p1 = xor_ln107_fu_1285_p2;

assign sext_ln111_fu_1216_p1 = $signed(add_ln111_fu_1210_p2);

assign sext_ln120_fu_1375_p1 = $signed(add_ln120_2_fu_1369_p2);

assign sext_ln129_fu_1420_p1 = $signed(add_ln129_1_fu_1414_p2);

assign sext_ln178_fu_750_p0 = num_training;

assign sext_ln321_fu_745_p1 = $signed(add_ln321_fu_739_p2);

assign sext_ln51_fu_1012_p1 = $signed(add_ln51_fu_1007_p2);

assign shl_ln1_fu_1124_p3 = {{i2_0_i_reg_600}, {2'd0}};

assign shl_ln_fu_908_p3 = {{j_0_reg_509}, {2'd0}};

assign sub_ln100_fu_1136_p2 = (zext_ln100_2_fu_1132_p1 - zext_ln94_fu_1108_p1);

assign sub_ln1357_fu_916_p2 = (shl_ln_fu_908_p3 - zext_ln1357_fu_882_p1);

assign sub_ln178_1_fu_800_p2 = (29'd0 - select_ln178_fu_792_p3);

assign sub_ln178_fu_759_p2 = (65'd0 - mul_ln178_fu_753_p2);

assign t_fu_834_p2 = (t_0_reg_464 + 31'd1);

assign tmp_10_fu_1226_p4 = {{pos_0_i_reg_633[31:2]}};

assign tmp_7_fu_765_p1 = num_training;

assign tmp_7_fu_765_p3 = tmp_7_fu_765_p1[32'd31];

assign tmp_8_fu_772_p4 = {{sub_ln178_fu_759_p2[64:36]}};

assign tmp_9_fu_782_p4 = {{mul_ln178_fu_753_p2[64:36]}};

assign trunc_ln108_fu_1318_p1 = array3_q1[5:0];

assign trunc_ln110_fu_1206_p1 = pos_0_i_reg_633[5:0];

assign trunc_ln120_fu_1365_p1 = array3_q0[5:0];

assign trunc_ln129_fu_1410_p1 = max_vote_reg_667[5:0];

assign trunc_ln321_fu_735_p1 = i1_0_reg_452[15:0];

assign trunc_ln51_fu_1003_p1 = max_dist_id_0_i_reg_555[5:0];

assign xor_ln107_fu_1285_p2 = (r3_0_i_reg_645 ^ 2'd2);

assign zext_ln100_1_fu_1196_p1 = r_0_i_reg_622;

assign zext_ln100_2_fu_1132_p1 = shl_ln1_fu_1124_p3;

assign zext_ln100_fu_1171_p1 = $unsigned(sext_ln100_fu_1167_p1);

assign zext_ln106_fu_1269_p1 = r_1_fu_1263_p2;

assign zext_ln107_1_fu_1315_p1 = r_1_reg_1732;

assign zext_ln107_fu_1311_p1 = r_1_reg_1732;

assign zext_ln108_1_fu_1306_p1 = add_ln108_fu_1300_p2;

assign zext_ln108_2_fu_1328_p1 = add_ln108_1_fu_1322_p2;

assign zext_ln108_fu_1333_p1 = trunc_ln108_fu_1318_p1;

assign zext_ln110_fu_1201_p1 = pos_0_i_reg_633;

assign zext_ln111_fu_1142_p1 = i2_0_i_reg_600;

assign zext_ln120_1_fu_1360_p1 = add_ln120_1_fu_1354_p2;

assign zext_ln120_fu_1350_p1 = i4_0_i_reg_656;

assign zext_ln129_fu_1405_p1 = add_ln129_fu_1399_p2;

assign zext_ln1357_fu_882_p1 = j_0_reg_509;

assign zext_ln168_fu_715_p1 = i_0_reg_441;

assign zext_ln172_fu_720_p1 = i1_0_reg_452;

assign zext_ln175_fu_820_p1 = i1_0_reg_452;

assign zext_ln181_fu_825_p1 = t_0_reg_464;

assign zext_ln184_fu_840_p1 = t_0_reg_464;

assign zext_ln18_fu_954_p1 = p_Result_s_fu_947_p3;

assign zext_ln190_fu_857_p1 = i2_0_reg_475;

assign zext_ln193_1_fu_866_p1 = i3_0_reg_486;

assign zext_ln193_fu_862_p1 = i3_0_reg_486;

assign zext_ln199_fu_903_p1 = add_ln199_fu_898_p2;

assign zext_ln215_fu_1443_p1 = i4_0_reg_692;

assign zext_ln218_fu_1458_p1 = i4_0_reg_692;

assign zext_ln35_1_fu_931_p1 = bvh_d_index_reg_532;

assign zext_ln35_fu_964_p1 = dist_reg_520;

assign zext_ln43_1_fu_993_p1 = add_ln43_fu_988_p2;

assign zext_ln43_fu_984_p1 = max_dist_id_reg_567;

assign zext_ln45_fu_968_p1 = max_dist_id_reg_567;

assign zext_ln51_fu_1017_p1 = dist_reg_520;

assign zext_ln83_1_fu_1070_p1 = i_0_i_reg_578;

assign zext_ln83_fu_1065_p1 = i_0_i_reg_578;

assign zext_ln84_fu_1080_p1 = add_ln84_fu_1074_p2;

assign zext_ln89_fu_1103_p1 = add_ln89_fu_1097_p2;

assign zext_ln94_fu_1108_p1 = i2_0_i_reg_600;

assign zext_ln95_fu_1146_p1 = j_0_i_reg_611;

assign zext_ln98_fu_1180_p1 = r_0_i_reg_622;

always @ (posedge ap_clk) begin
    zext_ln168_reg_1484[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln184_reg_1520[63:31] <= 33'b000000000000000000000000000000000;
    zext_ln193_reg_1543[14:11] <= 4'b0000;
    zext_ln193_1_reg_1548[28:11] <= 18'b000000000000000000;
    zext_ln35_reg_1602[31:9] <= 23'b00000000000000000000000;
    zext_ln45_reg_1607[31:2] <= 30'b000000000000000000000000000000;
    zext_ln111_reg_1672[31:4] <= 28'b0000000000000000000000000000;
    zext_ln98_reg_1696[31:2] <= 30'b000000000000000000000000000000;
    zext_ln218_reg_1806[63:31] <= 33'b000000000000000000000000000000000;
end

endmodule //DigitRec
