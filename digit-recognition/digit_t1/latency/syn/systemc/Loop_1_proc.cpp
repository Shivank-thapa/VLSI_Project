// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_1_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_1_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_1_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> Loop_1_proc::ap_ST_fsm_state1 = "1";
const sc_lv<3> Loop_1_proc::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> Loop_1_proc::ap_ST_fsm_state4 = "100";
const sc_lv<32> Loop_1_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Loop_1_proc::ap_const_boolean_1 = true;
const sc_lv<32> Loop_1_proc::ap_const_lv32_1 = "1";
const bool Loop_1_proc::ap_const_boolean_0 = false;
const sc_lv<1> Loop_1_proc::ap_const_lv1_0 = "0";
const sc_lv<1> Loop_1_proc::ap_const_lv1_1 = "1";
const sc_lv<15> Loop_1_proc::ap_const_lv15_0 = "000000000000000";
const sc_lv<30> Loop_1_proc::ap_const_lv30_0 = "000000000000000000000000000000";
const sc_lv<4> Loop_1_proc::ap_const_lv4_8 = "1000";
const sc_lv<4> Loop_1_proc::ap_const_lv4_7 = "111";
const sc_lv<4> Loop_1_proc::ap_const_lv4_6 = "110";
const sc_lv<4> Loop_1_proc::ap_const_lv4_5 = "101";
const sc_lv<4> Loop_1_proc::ap_const_lv4_4 = "100";
const sc_lv<4> Loop_1_proc::ap_const_lv4_3 = "11";
const sc_lv<4> Loop_1_proc::ap_const_lv4_2 = "10";
const sc_lv<4> Loop_1_proc::ap_const_lv4_1 = "1";
const sc_lv<4> Loop_1_proc::ap_const_lv4_0 = "0000";
const sc_lv<4> Loop_1_proc::ap_const_lv4_F = "1111";
const sc_lv<4> Loop_1_proc::ap_const_lv4_E = "1110";
const sc_lv<4> Loop_1_proc::ap_const_lv4_D = "1101";
const sc_lv<4> Loop_1_proc::ap_const_lv4_C = "1100";
const sc_lv<4> Loop_1_proc::ap_const_lv4_B = "1011";
const sc_lv<4> Loop_1_proc::ap_const_lv4_A = "1010";
const sc_lv<4> Loop_1_proc::ap_const_lv4_9 = "1001";
const sc_lv<15> Loop_1_proc::ap_const_lv15_4650 = "100011001010000";
const sc_lv<15> Loop_1_proc::ap_const_lv15_1 = "1";
const sc_lv<30> Loop_1_proc::ap_const_lv30_91A3 = "1001000110100011";
const sc_lv<32> Loop_1_proc::ap_const_lv32_1A = "11010";
const sc_lv<32> Loop_1_proc::ap_const_lv32_1D = "11101";
const sc_lv<15> Loop_1_proc::ap_const_lv15_708 = "11100001000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_2 = "10";

Loop_1_proc::Loop_1_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln169_fu_314_p2);
    sensitive << ( phi_urem_reg_255 );

    SC_METHOD(thread_add_ln321_fu_284_p2);
    sensitive << ( phi_mul_reg_244 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln165_fu_267_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_global_training_set_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln168_fu_279_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_global_training_set_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_i_fu_273_p2);
    sensitive << ( i_0_i_reg_233 );

    SC_METHOD(thread_icmp_ln165_fu_267_p2);
    sensitive << ( i_0_i_reg_233 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln169_fu_320_p2);
    sensitive << ( icmp_ln165_reg_334 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( add_ln169_fu_314_p2 );

    SC_METHOD(thread_select_ln169_fu_326_p3);
    sensitive << ( add_ln169_fu_314_p2 );
    sensitive << ( icmp_ln169_fu_320_p2 );

    SC_METHOD(thread_training_set_V_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln321_fu_300_p1 );

    SC_METHOD(thread_training_set_V_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_training_set_V_0_d0);
    sensitive << ( global_training_set_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_training_set_V_0_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_reg_353 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_training_set_V_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln321_fu_300_p1 );

    SC_METHOD(thread_training_set_V_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_training_set_V_1_d0);
    sensitive << ( global_training_set_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_training_set_V_1_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_reg_353 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_training_set_V_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln321_fu_300_p1 );

    SC_METHOD(thread_training_set_V_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_training_set_V_2_d0);
    sensitive << ( global_training_set_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_training_set_V_2_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_reg_353 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_training_set_V_3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln321_fu_300_p1 );

    SC_METHOD(thread_training_set_V_3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_training_set_V_3_d0);
    sensitive << ( global_training_set_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_training_set_V_3_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_reg_353 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_training_set_V_4_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln321_fu_300_p1 );

    SC_METHOD(thread_training_set_V_4_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_training_set_V_4_d0);
    sensitive << ( global_training_set_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_training_set_V_4_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_reg_353 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_training_set_V_5_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln321_fu_300_p1 );

    SC_METHOD(thread_training_set_V_5_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_training_set_V_5_d0);
    sensitive << ( global_training_set_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_training_set_V_5_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_reg_353 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_training_set_V_6_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln321_fu_300_p1 );

    SC_METHOD(thread_training_set_V_6_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_training_set_V_6_d0);
    sensitive << ( global_training_set_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_training_set_V_6_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_reg_353 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_training_set_V_7_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln321_fu_300_p1 );

    SC_METHOD(thread_training_set_V_7_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_training_set_V_7_d0);
    sensitive << ( global_training_set_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_training_set_V_7_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_reg_353 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_training_set_V_8_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln321_fu_300_p1 );

    SC_METHOD(thread_training_set_V_8_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_training_set_V_8_d0);
    sensitive << ( global_training_set_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_training_set_V_8_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_reg_353 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_training_set_V_9_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln321_fu_300_p1 );

    SC_METHOD(thread_training_set_V_9_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_training_set_V_9_d0);
    sensitive << ( global_training_set_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_training_set_V_9_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_reg_353 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_zext_ln168_fu_279_p1);
    sensitive << ( i_0_i_reg_233 );

    SC_METHOD(thread_zext_ln321_fu_300_p1);
    sensitive << ( phi_urem_reg_255 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln165_fu_267_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_1_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, global_training_set_V_address0, "(port)global_training_set_V_address0");
    sc_trace(mVcdFile, global_training_set_V_ce0, "(port)global_training_set_V_ce0");
    sc_trace(mVcdFile, global_training_set_V_q0, "(port)global_training_set_V_q0");
    sc_trace(mVcdFile, training_set_V_0_address0, "(port)training_set_V_0_address0");
    sc_trace(mVcdFile, training_set_V_0_ce0, "(port)training_set_V_0_ce0");
    sc_trace(mVcdFile, training_set_V_0_we0, "(port)training_set_V_0_we0");
    sc_trace(mVcdFile, training_set_V_0_d0, "(port)training_set_V_0_d0");
    sc_trace(mVcdFile, training_set_V_1_address0, "(port)training_set_V_1_address0");
    sc_trace(mVcdFile, training_set_V_1_ce0, "(port)training_set_V_1_ce0");
    sc_trace(mVcdFile, training_set_V_1_we0, "(port)training_set_V_1_we0");
    sc_trace(mVcdFile, training_set_V_1_d0, "(port)training_set_V_1_d0");
    sc_trace(mVcdFile, training_set_V_2_address0, "(port)training_set_V_2_address0");
    sc_trace(mVcdFile, training_set_V_2_ce0, "(port)training_set_V_2_ce0");
    sc_trace(mVcdFile, training_set_V_2_we0, "(port)training_set_V_2_we0");
    sc_trace(mVcdFile, training_set_V_2_d0, "(port)training_set_V_2_d0");
    sc_trace(mVcdFile, training_set_V_3_address0, "(port)training_set_V_3_address0");
    sc_trace(mVcdFile, training_set_V_3_ce0, "(port)training_set_V_3_ce0");
    sc_trace(mVcdFile, training_set_V_3_we0, "(port)training_set_V_3_we0");
    sc_trace(mVcdFile, training_set_V_3_d0, "(port)training_set_V_3_d0");
    sc_trace(mVcdFile, training_set_V_4_address0, "(port)training_set_V_4_address0");
    sc_trace(mVcdFile, training_set_V_4_ce0, "(port)training_set_V_4_ce0");
    sc_trace(mVcdFile, training_set_V_4_we0, "(port)training_set_V_4_we0");
    sc_trace(mVcdFile, training_set_V_4_d0, "(port)training_set_V_4_d0");
    sc_trace(mVcdFile, training_set_V_5_address0, "(port)training_set_V_5_address0");
    sc_trace(mVcdFile, training_set_V_5_ce0, "(port)training_set_V_5_ce0");
    sc_trace(mVcdFile, training_set_V_5_we0, "(port)training_set_V_5_we0");
    sc_trace(mVcdFile, training_set_V_5_d0, "(port)training_set_V_5_d0");
    sc_trace(mVcdFile, training_set_V_6_address0, "(port)training_set_V_6_address0");
    sc_trace(mVcdFile, training_set_V_6_ce0, "(port)training_set_V_6_ce0");
    sc_trace(mVcdFile, training_set_V_6_we0, "(port)training_set_V_6_we0");
    sc_trace(mVcdFile, training_set_V_6_d0, "(port)training_set_V_6_d0");
    sc_trace(mVcdFile, training_set_V_7_address0, "(port)training_set_V_7_address0");
    sc_trace(mVcdFile, training_set_V_7_ce0, "(port)training_set_V_7_ce0");
    sc_trace(mVcdFile, training_set_V_7_we0, "(port)training_set_V_7_we0");
    sc_trace(mVcdFile, training_set_V_7_d0, "(port)training_set_V_7_d0");
    sc_trace(mVcdFile, training_set_V_8_address0, "(port)training_set_V_8_address0");
    sc_trace(mVcdFile, training_set_V_8_ce0, "(port)training_set_V_8_ce0");
    sc_trace(mVcdFile, training_set_V_8_we0, "(port)training_set_V_8_we0");
    sc_trace(mVcdFile, training_set_V_8_d0, "(port)training_set_V_8_d0");
    sc_trace(mVcdFile, training_set_V_9_address0, "(port)training_set_V_9_address0");
    sc_trace(mVcdFile, training_set_V_9_ce0, "(port)training_set_V_9_ce0");
    sc_trace(mVcdFile, training_set_V_9_we0, "(port)training_set_V_9_we0");
    sc_trace(mVcdFile, training_set_V_9_d0, "(port)training_set_V_9_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_0_i_reg_233, "i_0_i_reg_233");
    sc_trace(mVcdFile, phi_mul_reg_244, "phi_mul_reg_244");
    sc_trace(mVcdFile, phi_urem_reg_255, "phi_urem_reg_255");
    sc_trace(mVcdFile, icmp_ln165_fu_267_p2, "icmp_ln165_fu_267_p2");
    sc_trace(mVcdFile, icmp_ln165_reg_334, "icmp_ln165_reg_334");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_fu_273_p2, "i_fu_273_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, add_ln321_fu_284_p2, "add_ln321_fu_284_p2");
    sc_trace(mVcdFile, tmp_reg_353, "tmp_reg_353");
    sc_trace(mVcdFile, select_ln169_fu_326_p3, "select_ln169_fu_326_p3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, zext_ln168_fu_279_p1, "zext_ln168_fu_279_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, zext_ln321_fu_300_p1, "zext_ln321_fu_300_p1");
    sc_trace(mVcdFile, add_ln169_fu_314_p2, "add_ln169_fu_314_p2");
    sc_trace(mVcdFile, icmp_ln169_fu_320_p2, "icmp_ln169_fu_320_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Loop_1_proc::~Loop_1_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Loop_1_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln165_fu_267_p2.read(), ap_const_lv1_0))) {
        i_0_i_reg_233 = i_fu_273_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_0_i_reg_233 = ap_const_lv15_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln165_fu_267_p2.read(), ap_const_lv1_0))) {
        phi_mul_reg_244 = add_ln321_fu_284_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        phi_mul_reg_244 = ap_const_lv30_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln165_reg_334.read(), ap_const_lv1_0))) {
        phi_urem_reg_255 = select_ln169_fu_326_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        phi_urem_reg_255 = ap_const_lv15_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln165_reg_334 = icmp_ln165_fu_267_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln165_fu_267_p2.read(), ap_const_lv1_0))) {
        tmp_reg_353 = phi_mul_reg_244.read().range(29, 26);
    }
}

void Loop_1_proc::thread_add_ln169_fu_314_p2() {
    add_ln169_fu_314_p2 = (!phi_urem_reg_255.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(phi_urem_reg_255.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void Loop_1_proc::thread_add_ln321_fu_284_p2() {
    add_ln321_fu_284_p2 = (!phi_mul_reg_244.read().is_01() || !ap_const_lv30_91A3.is_01())? sc_lv<30>(): (sc_biguint<30>(phi_mul_reg_244.read()) + sc_biguint<30>(ap_const_lv30_91A3));
}

void Loop_1_proc::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Loop_1_proc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_1_proc::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void Loop_1_proc::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Loop_1_proc::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln165_fu_267_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_1_proc::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Loop_1_proc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_global_training_set_V_address0() {
    global_training_set_V_address0 =  (sc_lv<15>) (zext_ln168_fu_279_p1.read());
}

void Loop_1_proc::thread_global_training_set_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        global_training_set_V_ce0 = ap_const_logic_1;
    } else {
        global_training_set_V_ce0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_i_fu_273_p2() {
    i_fu_273_p2 = (!i_0_i_reg_233.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(i_0_i_reg_233.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void Loop_1_proc::thread_icmp_ln165_fu_267_p2() {
    icmp_ln165_fu_267_p2 = (!i_0_i_reg_233.read().is_01() || !ap_const_lv15_4650.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_233.read() == ap_const_lv15_4650);
}

void Loop_1_proc::thread_icmp_ln169_fu_320_p2() {
    icmp_ln169_fu_320_p2 = (!add_ln169_fu_314_p2.read().is_01() || !ap_const_lv15_708.is_01())? sc_lv<1>(): (sc_biguint<15>(add_ln169_fu_314_p2.read()) < sc_biguint<15>(ap_const_lv15_708));
}

void Loop_1_proc::thread_select_ln169_fu_326_p3() {
    select_ln169_fu_326_p3 = (!icmp_ln169_fu_320_p2.read()[0].is_01())? sc_lv<15>(): ((icmp_ln169_fu_320_p2.read()[0].to_bool())? add_ln169_fu_314_p2.read(): ap_const_lv15_0);
}

void Loop_1_proc::thread_training_set_V_0_address0() {
    training_set_V_0_address0 =  (sc_lv<11>) (zext_ln321_fu_300_p1.read());
}

void Loop_1_proc::thread_training_set_V_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        training_set_V_0_ce0 = ap_const_logic_1;
    } else {
        training_set_V_0_ce0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_training_set_V_0_d0() {
    training_set_V_0_d0 = global_training_set_V_q0.read();
}

void Loop_1_proc::thread_training_set_V_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,4,4>(tmp_reg_353.read(), ap_const_lv4_0))) {
        training_set_V_0_we0 = ap_const_logic_1;
    } else {
        training_set_V_0_we0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_training_set_V_1_address0() {
    training_set_V_1_address0 =  (sc_lv<11>) (zext_ln321_fu_300_p1.read());
}

void Loop_1_proc::thread_training_set_V_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        training_set_V_1_ce0 = ap_const_logic_1;
    } else {
        training_set_V_1_ce0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_training_set_V_1_d0() {
    training_set_V_1_d0 = global_training_set_V_q0.read();
}

void Loop_1_proc::thread_training_set_V_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,4,4>(tmp_reg_353.read(), ap_const_lv4_1))) {
        training_set_V_1_we0 = ap_const_logic_1;
    } else {
        training_set_V_1_we0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_training_set_V_2_address0() {
    training_set_V_2_address0 =  (sc_lv<11>) (zext_ln321_fu_300_p1.read());
}

void Loop_1_proc::thread_training_set_V_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        training_set_V_2_ce0 = ap_const_logic_1;
    } else {
        training_set_V_2_ce0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_training_set_V_2_d0() {
    training_set_V_2_d0 = global_training_set_V_q0.read();
}

void Loop_1_proc::thread_training_set_V_2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,4,4>(tmp_reg_353.read(), ap_const_lv4_2))) {
        training_set_V_2_we0 = ap_const_logic_1;
    } else {
        training_set_V_2_we0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_training_set_V_3_address0() {
    training_set_V_3_address0 =  (sc_lv<11>) (zext_ln321_fu_300_p1.read());
}

void Loop_1_proc::thread_training_set_V_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        training_set_V_3_ce0 = ap_const_logic_1;
    } else {
        training_set_V_3_ce0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_training_set_V_3_d0() {
    training_set_V_3_d0 = global_training_set_V_q0.read();
}

void Loop_1_proc::thread_training_set_V_3_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,4,4>(tmp_reg_353.read(), ap_const_lv4_3))) {
        training_set_V_3_we0 = ap_const_logic_1;
    } else {
        training_set_V_3_we0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_training_set_V_4_address0() {
    training_set_V_4_address0 =  (sc_lv<11>) (zext_ln321_fu_300_p1.read());
}

void Loop_1_proc::thread_training_set_V_4_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        training_set_V_4_ce0 = ap_const_logic_1;
    } else {
        training_set_V_4_ce0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_training_set_V_4_d0() {
    training_set_V_4_d0 = global_training_set_V_q0.read();
}

void Loop_1_proc::thread_training_set_V_4_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,4,4>(tmp_reg_353.read(), ap_const_lv4_4))) {
        training_set_V_4_we0 = ap_const_logic_1;
    } else {
        training_set_V_4_we0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_training_set_V_5_address0() {
    training_set_V_5_address0 =  (sc_lv<11>) (zext_ln321_fu_300_p1.read());
}

void Loop_1_proc::thread_training_set_V_5_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        training_set_V_5_ce0 = ap_const_logic_1;
    } else {
        training_set_V_5_ce0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_training_set_V_5_d0() {
    training_set_V_5_d0 = global_training_set_V_q0.read();
}

void Loop_1_proc::thread_training_set_V_5_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,4,4>(tmp_reg_353.read(), ap_const_lv4_5))) {
        training_set_V_5_we0 = ap_const_logic_1;
    } else {
        training_set_V_5_we0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_training_set_V_6_address0() {
    training_set_V_6_address0 =  (sc_lv<11>) (zext_ln321_fu_300_p1.read());
}

void Loop_1_proc::thread_training_set_V_6_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        training_set_V_6_ce0 = ap_const_logic_1;
    } else {
        training_set_V_6_ce0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_training_set_V_6_d0() {
    training_set_V_6_d0 = global_training_set_V_q0.read();
}

void Loop_1_proc::thread_training_set_V_6_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,4,4>(tmp_reg_353.read(), ap_const_lv4_6))) {
        training_set_V_6_we0 = ap_const_logic_1;
    } else {
        training_set_V_6_we0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_training_set_V_7_address0() {
    training_set_V_7_address0 =  (sc_lv<11>) (zext_ln321_fu_300_p1.read());
}

void Loop_1_proc::thread_training_set_V_7_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        training_set_V_7_ce0 = ap_const_logic_1;
    } else {
        training_set_V_7_ce0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_training_set_V_7_d0() {
    training_set_V_7_d0 = global_training_set_V_q0.read();
}

void Loop_1_proc::thread_training_set_V_7_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,4,4>(tmp_reg_353.read(), ap_const_lv4_7))) {
        training_set_V_7_we0 = ap_const_logic_1;
    } else {
        training_set_V_7_we0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_training_set_V_8_address0() {
    training_set_V_8_address0 =  (sc_lv<11>) (zext_ln321_fu_300_p1.read());
}

void Loop_1_proc::thread_training_set_V_8_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        training_set_V_8_ce0 = ap_const_logic_1;
    } else {
        training_set_V_8_ce0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_training_set_V_8_d0() {
    training_set_V_8_d0 = global_training_set_V_q0.read();
}

void Loop_1_proc::thread_training_set_V_8_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,4,4>(tmp_reg_353.read(), ap_const_lv4_8))) {
        training_set_V_8_we0 = ap_const_logic_1;
    } else {
        training_set_V_8_we0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_training_set_V_9_address0() {
    training_set_V_9_address0 =  (sc_lv<11>) (zext_ln321_fu_300_p1.read());
}

void Loop_1_proc::thread_training_set_V_9_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        training_set_V_9_ce0 = ap_const_logic_1;
    } else {
        training_set_V_9_ce0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_training_set_V_9_d0() {
    training_set_V_9_d0 = global_training_set_V_q0.read();
}

void Loop_1_proc::thread_training_set_V_9_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         ((((((esl_seteq<1,4,4>(tmp_reg_353.read(), ap_const_lv4_F) || 
               esl_seteq<1,4,4>(tmp_reg_353.read(), ap_const_lv4_E)) || 
              esl_seteq<1,4,4>(tmp_reg_353.read(), ap_const_lv4_D)) || 
             esl_seteq<1,4,4>(tmp_reg_353.read(), ap_const_lv4_C)) || 
            esl_seteq<1,4,4>(tmp_reg_353.read(), ap_const_lv4_B)) || 
           esl_seteq<1,4,4>(tmp_reg_353.read(), ap_const_lv4_A)) || 
          esl_seteq<1,4,4>(tmp_reg_353.read(), ap_const_lv4_9)))) {
        training_set_V_9_we0 = ap_const_logic_1;
    } else {
        training_set_V_9_we0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_zext_ln168_fu_279_p1() {
    zext_ln168_fu_279_p1 = esl_zext<64,15>(i_0_i_reg_233.read());
}

void Loop_1_proc::thread_zext_ln321_fu_300_p1() {
    zext_ln321_fu_300_p1 = esl_zext<64,15>(phi_urem_reg_255.read());
}

void Loop_1_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln165_fu_267_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln165_fu_267_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

