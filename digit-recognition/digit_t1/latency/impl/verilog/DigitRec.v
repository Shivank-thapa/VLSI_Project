// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="DigitRec,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku5p-ffvb676-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.663100,HLS_SYN_LAT=18083007,HLS_SYN_TPT=18064002,HLS_SYN_MEM=320,HLS_SYN_DSP=4,HLS_SYN_FF=9412,HLS_SYN_LUT=12776,HLS_VERSION=2019_1}" *)

module DigitRec (
        global_training_set_V_address0,
        global_training_set_V_ce0,
        global_training_set_V_d0,
        global_training_set_V_q0,
        global_training_set_V_we0,
        global_training_set_V_address1,
        global_training_set_V_ce1,
        global_training_set_V_d1,
        global_training_set_V_q1,
        global_training_set_V_we1,
        global_test_set_V_address0,
        global_test_set_V_ce0,
        global_test_set_V_d0,
        global_test_set_V_q0,
        global_test_set_V_we0,
        global_test_set_V_address1,
        global_test_set_V_ce1,
        global_test_set_V_d1,
        global_test_set_V_q1,
        global_test_set_V_we1,
        global_results_address0,
        global_results_ce0,
        global_results_d0,
        global_results_q0,
        global_results_we0,
        global_results_address1,
        global_results_ce1,
        global_results_d1,
        global_results_q1,
        global_results_we1,
        num_training,
        num_test,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle
);


output  [14:0] global_training_set_V_address0;
output   global_training_set_V_ce0;
output  [255:0] global_training_set_V_d0;
input  [255:0] global_training_set_V_q0;
output   global_training_set_V_we0;
output  [14:0] global_training_set_V_address1;
output   global_training_set_V_ce1;
output  [255:0] global_training_set_V_d1;
input  [255:0] global_training_set_V_q1;
output   global_training_set_V_we1;
output  [10:0] global_test_set_V_address0;
output   global_test_set_V_ce0;
output  [255:0] global_test_set_V_d0;
input  [255:0] global_test_set_V_q0;
output   global_test_set_V_we0;
output  [10:0] global_test_set_V_address1;
output   global_test_set_V_ce1;
output  [255:0] global_test_set_V_d1;
input  [255:0] global_test_set_V_q1;
output   global_test_set_V_we1;
output  [10:0] global_results_address0;
output   global_results_ce0;
output  [7:0] global_results_d0;
input  [7:0] global_results_q0;
output   global_results_we0;
output  [10:0] global_results_address1;
output   global_results_ce1;
output  [7:0] global_results_d1;
input  [7:0] global_results_q1;
output   global_results_we1;
input  [31:0] num_training;
input  [31:0] num_test;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;

wire    DigitRec_entry3_U0_ap_start;
wire    DigitRec_entry3_U0_ap_done;
wire    DigitRec_entry3_U0_ap_continue;
wire    DigitRec_entry3_U0_ap_idle;
wire    DigitRec_entry3_U0_ap_ready;
wire    DigitRec_entry3_U0_start_out;
wire    DigitRec_entry3_U0_start_write;
wire   [31:0] DigitRec_entry3_U0_num_training_out_din;
wire    DigitRec_entry3_U0_num_training_out_write;
wire   [31:0] DigitRec_entry3_U0_num_test_out_din;
wire    DigitRec_entry3_U0_num_test_out_write;
wire    DigitRec_entry28_U0_ap_start;
wire    DigitRec_entry28_U0_ap_done;
wire    DigitRec_entry28_U0_ap_continue;
wire    DigitRec_entry28_U0_ap_idle;
wire    DigitRec_entry28_U0_ap_ready;
wire    DigitRec_entry28_U0_num_training_read;
wire    DigitRec_entry28_U0_num_test_read;
wire   [31:0] DigitRec_entry28_U0_num_training_out_din;
wire    DigitRec_entry28_U0_num_training_out_write;
wire   [31:0] DigitRec_entry28_U0_num_test_out_din;
wire    DigitRec_entry28_U0_num_test_out_write;
wire   [31:0] DigitRec_entry28_U0_num_test_out1_din;
wire    DigitRec_entry28_U0_num_test_out1_write;
wire    Loop_1_proc_U0_ap_start;
wire    Loop_1_proc_U0_ap_done;
wire    Loop_1_proc_U0_ap_continue;
wire    Loop_1_proc_U0_ap_idle;
wire    Loop_1_proc_U0_ap_ready;
wire   [14:0] Loop_1_proc_U0_global_training_set_V_address0;
wire    Loop_1_proc_U0_global_training_set_V_ce0;
wire   [10:0] Loop_1_proc_U0_training_set_V_0_address0;
wire    Loop_1_proc_U0_training_set_V_0_ce0;
wire    Loop_1_proc_U0_training_set_V_0_we0;
wire   [255:0] Loop_1_proc_U0_training_set_V_0_d0;
wire   [10:0] Loop_1_proc_U0_training_set_V_1_address0;
wire    Loop_1_proc_U0_training_set_V_1_ce0;
wire    Loop_1_proc_U0_training_set_V_1_we0;
wire   [255:0] Loop_1_proc_U0_training_set_V_1_d0;
wire   [10:0] Loop_1_proc_U0_training_set_V_2_address0;
wire    Loop_1_proc_U0_training_set_V_2_ce0;
wire    Loop_1_proc_U0_training_set_V_2_we0;
wire   [255:0] Loop_1_proc_U0_training_set_V_2_d0;
wire   [10:0] Loop_1_proc_U0_training_set_V_3_address0;
wire    Loop_1_proc_U0_training_set_V_3_ce0;
wire    Loop_1_proc_U0_training_set_V_3_we0;
wire   [255:0] Loop_1_proc_U0_training_set_V_3_d0;
wire   [10:0] Loop_1_proc_U0_training_set_V_4_address0;
wire    Loop_1_proc_U0_training_set_V_4_ce0;
wire    Loop_1_proc_U0_training_set_V_4_we0;
wire   [255:0] Loop_1_proc_U0_training_set_V_4_d0;
wire   [10:0] Loop_1_proc_U0_training_set_V_5_address0;
wire    Loop_1_proc_U0_training_set_V_5_ce0;
wire    Loop_1_proc_U0_training_set_V_5_we0;
wire   [255:0] Loop_1_proc_U0_training_set_V_5_d0;
wire   [10:0] Loop_1_proc_U0_training_set_V_6_address0;
wire    Loop_1_proc_U0_training_set_V_6_ce0;
wire    Loop_1_proc_U0_training_set_V_6_we0;
wire   [255:0] Loop_1_proc_U0_training_set_V_6_d0;
wire   [10:0] Loop_1_proc_U0_training_set_V_7_address0;
wire    Loop_1_proc_U0_training_set_V_7_ce0;
wire    Loop_1_proc_U0_training_set_V_7_we0;
wire   [255:0] Loop_1_proc_U0_training_set_V_7_d0;
wire   [10:0] Loop_1_proc_U0_training_set_V_8_address0;
wire    Loop_1_proc_U0_training_set_V_8_ce0;
wire    Loop_1_proc_U0_training_set_V_8_we0;
wire   [255:0] Loop_1_proc_U0_training_set_V_8_d0;
wire   [10:0] Loop_1_proc_U0_training_set_V_9_address0;
wire    Loop_1_proc_U0_training_set_V_9_ce0;
wire    Loop_1_proc_U0_training_set_V_9_we0;
wire   [255:0] Loop_1_proc_U0_training_set_V_9_d0;
wire    ap_channel_done_training_set_V_9;
wire    Loop_1_proc_U0_training_set_V_9_full_n;
reg    ap_sync_reg_channel_write_training_set_V_9;
wire    ap_sync_channel_write_training_set_V_9;
wire    ap_channel_done_training_set_V_8;
wire    Loop_1_proc_U0_training_set_V_8_full_n;
reg    ap_sync_reg_channel_write_training_set_V_8;
wire    ap_sync_channel_write_training_set_V_8;
wire    ap_channel_done_training_set_V_7;
wire    Loop_1_proc_U0_training_set_V_7_full_n;
reg    ap_sync_reg_channel_write_training_set_V_7;
wire    ap_sync_channel_write_training_set_V_7;
wire    ap_channel_done_training_set_V_6;
wire    Loop_1_proc_U0_training_set_V_6_full_n;
reg    ap_sync_reg_channel_write_training_set_V_6;
wire    ap_sync_channel_write_training_set_V_6;
wire    ap_channel_done_training_set_V_5;
wire    Loop_1_proc_U0_training_set_V_5_full_n;
reg    ap_sync_reg_channel_write_training_set_V_5;
wire    ap_sync_channel_write_training_set_V_5;
wire    ap_channel_done_training_set_V_4;
wire    Loop_1_proc_U0_training_set_V_4_full_n;
reg    ap_sync_reg_channel_write_training_set_V_4;
wire    ap_sync_channel_write_training_set_V_4;
wire    ap_channel_done_training_set_V_3;
wire    Loop_1_proc_U0_training_set_V_3_full_n;
reg    ap_sync_reg_channel_write_training_set_V_3;
wire    ap_sync_channel_write_training_set_V_3;
wire    ap_channel_done_training_set_V_2;
wire    Loop_1_proc_U0_training_set_V_2_full_n;
reg    ap_sync_reg_channel_write_training_set_V_2;
wire    ap_sync_channel_write_training_set_V_2;
wire    ap_channel_done_training_set_V_1;
wire    Loop_1_proc_U0_training_set_V_1_full_n;
reg    ap_sync_reg_channel_write_training_set_V_1;
wire    ap_sync_channel_write_training_set_V_1;
wire    ap_channel_done_training_set_V_0;
wire    Loop_1_proc_U0_training_set_V_0_full_n;
reg    ap_sync_reg_channel_write_training_set_V_0;
wire    ap_sync_channel_write_training_set_V_0;
wire    Loop_2_proc_U0_ap_start;
wire    Loop_2_proc_U0_ap_done;
wire    Loop_2_proc_U0_ap_continue;
wire    Loop_2_proc_U0_ap_idle;
wire    Loop_2_proc_U0_ap_ready;
wire    Loop_2_proc_U0_num_test_read;
wire   [10:0] Loop_2_proc_U0_global_test_set_V_address0;
wire    Loop_2_proc_U0_global_test_set_V_ce0;
wire   [255:0] Loop_2_proc_U0_test_set_V_din;
wire    Loop_2_proc_U0_test_set_V_write;
wire    Loop_TEST_LOOP_proc2_U0_ap_start;
wire    Loop_TEST_LOOP_proc2_U0_ap_done;
wire    Loop_TEST_LOOP_proc2_U0_ap_continue;
wire    Loop_TEST_LOOP_proc2_U0_ap_idle;
wire    Loop_TEST_LOOP_proc2_U0_ap_ready;
wire    Loop_TEST_LOOP_proc2_U0_num_training_read;
wire    Loop_TEST_LOOP_proc2_U0_num_test_read;
wire   [31:0] Loop_TEST_LOOP_proc2_U0_num_test_out_din;
wire    Loop_TEST_LOOP_proc2_U0_num_test_out_write;
wire   [10:0] Loop_TEST_LOOP_proc2_U0_results_address0;
wire    Loop_TEST_LOOP_proc2_U0_results_ce0;
wire    Loop_TEST_LOOP_proc2_U0_results_we0;
wire   [3:0] Loop_TEST_LOOP_proc2_U0_results_d0;
wire   [10:0] Loop_TEST_LOOP_proc2_U0_training_set_V_0_address0;
wire    Loop_TEST_LOOP_proc2_U0_training_set_V_0_ce0;
wire   [10:0] Loop_TEST_LOOP_proc2_U0_training_set_V_1_address0;
wire    Loop_TEST_LOOP_proc2_U0_training_set_V_1_ce0;
wire   [10:0] Loop_TEST_LOOP_proc2_U0_training_set_V_2_address0;
wire    Loop_TEST_LOOP_proc2_U0_training_set_V_2_ce0;
wire   [10:0] Loop_TEST_LOOP_proc2_U0_training_set_V_3_address0;
wire    Loop_TEST_LOOP_proc2_U0_training_set_V_3_ce0;
wire   [10:0] Loop_TEST_LOOP_proc2_U0_training_set_V_4_address0;
wire    Loop_TEST_LOOP_proc2_U0_training_set_V_4_ce0;
wire   [10:0] Loop_TEST_LOOP_proc2_U0_training_set_V_5_address0;
wire    Loop_TEST_LOOP_proc2_U0_training_set_V_5_ce0;
wire   [10:0] Loop_TEST_LOOP_proc2_U0_training_set_V_6_address0;
wire    Loop_TEST_LOOP_proc2_U0_training_set_V_6_ce0;
wire   [10:0] Loop_TEST_LOOP_proc2_U0_training_set_V_7_address0;
wire    Loop_TEST_LOOP_proc2_U0_training_set_V_7_ce0;
wire   [10:0] Loop_TEST_LOOP_proc2_U0_training_set_V_8_address0;
wire    Loop_TEST_LOOP_proc2_U0_training_set_V_8_ce0;
wire   [10:0] Loop_TEST_LOOP_proc2_U0_training_set_V_9_address0;
wire    Loop_TEST_LOOP_proc2_U0_training_set_V_9_ce0;
wire    Loop_TEST_LOOP_proc2_U0_test_set_V_read;
wire    ap_channel_done_results;
wire    Loop_TEST_LOOP_proc2_U0_results_full_n;
wire    Loop_4_proc_U0_ap_start;
wire    Loop_4_proc_U0_ap_done;
wire    Loop_4_proc_U0_ap_continue;
wire    Loop_4_proc_U0_ap_idle;
wire    Loop_4_proc_U0_ap_ready;
wire    Loop_4_proc_U0_num_test_read;
wire   [10:0] Loop_4_proc_U0_global_results_address0;
wire    Loop_4_proc_U0_global_results_ce0;
wire    Loop_4_proc_U0_global_results_we0;
wire   [7:0] Loop_4_proc_U0_global_results_d0;
wire   [10:0] Loop_4_proc_U0_results_address0;
wire    Loop_4_proc_U0_results_ce0;
wire    ap_sync_continue;
wire   [255:0] training_set_V_0_i_q0;
wire   [255:0] training_set_V_0_t_q0;
wire    training_set_V_0_i_full_n;
wire    training_set_V_0_t_empty_n;
wire   [255:0] training_set_V_1_i_q0;
wire   [255:0] training_set_V_1_t_q0;
wire    training_set_V_1_i_full_n;
wire    training_set_V_1_t_empty_n;
wire   [255:0] training_set_V_2_i_q0;
wire   [255:0] training_set_V_2_t_q0;
wire    training_set_V_2_i_full_n;
wire    training_set_V_2_t_empty_n;
wire   [255:0] training_set_V_3_i_q0;
wire   [255:0] training_set_V_3_t_q0;
wire    training_set_V_3_i_full_n;
wire    training_set_V_3_t_empty_n;
wire   [255:0] training_set_V_4_i_q0;
wire   [255:0] training_set_V_4_t_q0;
wire    training_set_V_4_i_full_n;
wire    training_set_V_4_t_empty_n;
wire   [255:0] training_set_V_5_i_q0;
wire   [255:0] training_set_V_5_t_q0;
wire    training_set_V_5_i_full_n;
wire    training_set_V_5_t_empty_n;
wire   [255:0] training_set_V_6_i_q0;
wire   [255:0] training_set_V_6_t_q0;
wire    training_set_V_6_i_full_n;
wire    training_set_V_6_t_empty_n;
wire   [255:0] training_set_V_7_i_q0;
wire   [255:0] training_set_V_7_t_q0;
wire    training_set_V_7_i_full_n;
wire    training_set_V_7_t_empty_n;
wire   [255:0] training_set_V_8_i_q0;
wire   [255:0] training_set_V_8_t_q0;
wire    training_set_V_8_i_full_n;
wire    training_set_V_8_t_empty_n;
wire   [255:0] training_set_V_9_i_q0;
wire   [255:0] training_set_V_9_t_q0;
wire    training_set_V_9_i_full_n;
wire    training_set_V_9_t_empty_n;
wire   [3:0] results_i_q0;
wire   [3:0] results_t_q0;
wire    results_i_full_n;
wire    results_t_empty_n;
wire    num_training_c1_full_n;
wire   [31:0] num_training_c1_dout;
wire    num_training_c1_empty_n;
wire    num_test_c2_full_n;
wire   [31:0] num_test_c2_dout;
wire    num_test_c2_empty_n;
wire    num_training_c_full_n;
wire   [31:0] num_training_c_dout;
wire    num_training_c_empty_n;
wire    num_test_c_full_n;
wire   [31:0] num_test_c_dout;
wire    num_test_c_empty_n;
wire    num_test_c1108_full_n;
wire   [31:0] num_test_c1108_dout;
wire    num_test_c1108_empty_n;
wire    test_set_V_full_n;
wire   [255:0] test_set_V_dout;
wire    test_set_V_empty_n;
wire    num_test_c1109_full_n;
wire   [31:0] num_test_c1109_dout;
wire    num_test_c1109_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_DigitRec_entry3_U0_ap_ready;
wire    ap_sync_DigitRec_entry3_U0_ap_ready;
reg   [1:0] DigitRec_entry3_U0_ap_ready_count;
reg    ap_sync_reg_Loop_1_proc_U0_ap_ready;
wire    ap_sync_Loop_1_proc_U0_ap_ready;
reg   [1:0] Loop_1_proc_U0_ap_ready_count;
reg    ap_sync_reg_Loop_2_proc_U0_ap_ready;
wire    ap_sync_Loop_2_proc_U0_ap_ready;
reg   [1:0] Loop_2_proc_U0_ap_ready_count;
wire   [0:0] start_for_DigitRec_entry28_U0_din;
wire    start_for_DigitRec_entry28_U0_full_n;
wire   [0:0] start_for_DigitRec_entry28_U0_dout;
wire    start_for_DigitRec_entry28_U0_empty_n;
wire    DigitRec_entry28_U0_start_full_n;
wire    DigitRec_entry28_U0_start_write;
wire    Loop_1_proc_U0_start_full_n;
wire    Loop_1_proc_U0_start_write;
wire    Loop_2_proc_U0_start_full_n;
wire    Loop_2_proc_U0_start_write;
wire    Loop_TEST_LOOP_proc2_U0_start_full_n;
wire    Loop_TEST_LOOP_proc2_U0_start_write;
wire    Loop_4_proc_U0_start_full_n;
wire    Loop_4_proc_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_training_set_V_9 = 1'b0;
#0 ap_sync_reg_channel_write_training_set_V_8 = 1'b0;
#0 ap_sync_reg_channel_write_training_set_V_7 = 1'b0;
#0 ap_sync_reg_channel_write_training_set_V_6 = 1'b0;
#0 ap_sync_reg_channel_write_training_set_V_5 = 1'b0;
#0 ap_sync_reg_channel_write_training_set_V_4 = 1'b0;
#0 ap_sync_reg_channel_write_training_set_V_3 = 1'b0;
#0 ap_sync_reg_channel_write_training_set_V_2 = 1'b0;
#0 ap_sync_reg_channel_write_training_set_V_1 = 1'b0;
#0 ap_sync_reg_channel_write_training_set_V_0 = 1'b0;
#0 ap_sync_reg_DigitRec_entry3_U0_ap_ready = 1'b0;
#0 DigitRec_entry3_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Loop_1_proc_U0_ap_ready = 1'b0;
#0 Loop_1_proc_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Loop_2_proc_U0_ap_ready = 1'b0;
#0 Loop_2_proc_U0_ap_ready_count = 2'd0;
end

DigitRec_entry3 DigitRec_entry3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(DigitRec_entry3_U0_ap_start),
    .start_full_n(start_for_DigitRec_entry28_U0_full_n),
    .ap_done(DigitRec_entry3_U0_ap_done),
    .ap_continue(DigitRec_entry3_U0_ap_continue),
    .ap_idle(DigitRec_entry3_U0_ap_idle),
    .ap_ready(DigitRec_entry3_U0_ap_ready),
    .start_out(DigitRec_entry3_U0_start_out),
    .start_write(DigitRec_entry3_U0_start_write),
    .num_training(num_training),
    .num_test(num_test),
    .num_training_out_din(DigitRec_entry3_U0_num_training_out_din),
    .num_training_out_full_n(num_training_c1_full_n),
    .num_training_out_write(DigitRec_entry3_U0_num_training_out_write),
    .num_test_out_din(DigitRec_entry3_U0_num_test_out_din),
    .num_test_out_full_n(num_test_c2_full_n),
    .num_test_out_write(DigitRec_entry3_U0_num_test_out_write)
);

DigitRec_entry28 DigitRec_entry28_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(DigitRec_entry28_U0_ap_start),
    .ap_done(DigitRec_entry28_U0_ap_done),
    .ap_continue(DigitRec_entry28_U0_ap_continue),
    .ap_idle(DigitRec_entry28_U0_ap_idle),
    .ap_ready(DigitRec_entry28_U0_ap_ready),
    .num_training_dout(num_training_c1_dout),
    .num_training_empty_n(num_training_c1_empty_n),
    .num_training_read(DigitRec_entry28_U0_num_training_read),
    .num_test_dout(num_test_c2_dout),
    .num_test_empty_n(num_test_c2_empty_n),
    .num_test_read(DigitRec_entry28_U0_num_test_read),
    .num_training_out_din(DigitRec_entry28_U0_num_training_out_din),
    .num_training_out_full_n(num_training_c_full_n),
    .num_training_out_write(DigitRec_entry28_U0_num_training_out_write),
    .num_test_out_din(DigitRec_entry28_U0_num_test_out_din),
    .num_test_out_full_n(num_test_c_full_n),
    .num_test_out_write(DigitRec_entry28_U0_num_test_out_write),
    .num_test_out1_din(DigitRec_entry28_U0_num_test_out1_din),
    .num_test_out1_full_n(num_test_c1108_full_n),
    .num_test_out1_write(DigitRec_entry28_U0_num_test_out1_write)
);

Loop_1_proc Loop_1_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Loop_1_proc_U0_ap_start),
    .ap_done(Loop_1_proc_U0_ap_done),
    .ap_continue(Loop_1_proc_U0_ap_continue),
    .ap_idle(Loop_1_proc_U0_ap_idle),
    .ap_ready(Loop_1_proc_U0_ap_ready),
    .global_training_set_V_address0(Loop_1_proc_U0_global_training_set_V_address0),
    .global_training_set_V_ce0(Loop_1_proc_U0_global_training_set_V_ce0),
    .global_training_set_V_q0(global_training_set_V_q0),
    .training_set_V_0_address0(Loop_1_proc_U0_training_set_V_0_address0),
    .training_set_V_0_ce0(Loop_1_proc_U0_training_set_V_0_ce0),
    .training_set_V_0_we0(Loop_1_proc_U0_training_set_V_0_we0),
    .training_set_V_0_d0(Loop_1_proc_U0_training_set_V_0_d0),
    .training_set_V_1_address0(Loop_1_proc_U0_training_set_V_1_address0),
    .training_set_V_1_ce0(Loop_1_proc_U0_training_set_V_1_ce0),
    .training_set_V_1_we0(Loop_1_proc_U0_training_set_V_1_we0),
    .training_set_V_1_d0(Loop_1_proc_U0_training_set_V_1_d0),
    .training_set_V_2_address0(Loop_1_proc_U0_training_set_V_2_address0),
    .training_set_V_2_ce0(Loop_1_proc_U0_training_set_V_2_ce0),
    .training_set_V_2_we0(Loop_1_proc_U0_training_set_V_2_we0),
    .training_set_V_2_d0(Loop_1_proc_U0_training_set_V_2_d0),
    .training_set_V_3_address0(Loop_1_proc_U0_training_set_V_3_address0),
    .training_set_V_3_ce0(Loop_1_proc_U0_training_set_V_3_ce0),
    .training_set_V_3_we0(Loop_1_proc_U0_training_set_V_3_we0),
    .training_set_V_3_d0(Loop_1_proc_U0_training_set_V_3_d0),
    .training_set_V_4_address0(Loop_1_proc_U0_training_set_V_4_address0),
    .training_set_V_4_ce0(Loop_1_proc_U0_training_set_V_4_ce0),
    .training_set_V_4_we0(Loop_1_proc_U0_training_set_V_4_we0),
    .training_set_V_4_d0(Loop_1_proc_U0_training_set_V_4_d0),
    .training_set_V_5_address0(Loop_1_proc_U0_training_set_V_5_address0),
    .training_set_V_5_ce0(Loop_1_proc_U0_training_set_V_5_ce0),
    .training_set_V_5_we0(Loop_1_proc_U0_training_set_V_5_we0),
    .training_set_V_5_d0(Loop_1_proc_U0_training_set_V_5_d0),
    .training_set_V_6_address0(Loop_1_proc_U0_training_set_V_6_address0),
    .training_set_V_6_ce0(Loop_1_proc_U0_training_set_V_6_ce0),
    .training_set_V_6_we0(Loop_1_proc_U0_training_set_V_6_we0),
    .training_set_V_6_d0(Loop_1_proc_U0_training_set_V_6_d0),
    .training_set_V_7_address0(Loop_1_proc_U0_training_set_V_7_address0),
    .training_set_V_7_ce0(Loop_1_proc_U0_training_set_V_7_ce0),
    .training_set_V_7_we0(Loop_1_proc_U0_training_set_V_7_we0),
    .training_set_V_7_d0(Loop_1_proc_U0_training_set_V_7_d0),
    .training_set_V_8_address0(Loop_1_proc_U0_training_set_V_8_address0),
    .training_set_V_8_ce0(Loop_1_proc_U0_training_set_V_8_ce0),
    .training_set_V_8_we0(Loop_1_proc_U0_training_set_V_8_we0),
    .training_set_V_8_d0(Loop_1_proc_U0_training_set_V_8_d0),
    .training_set_V_9_address0(Loop_1_proc_U0_training_set_V_9_address0),
    .training_set_V_9_ce0(Loop_1_proc_U0_training_set_V_9_ce0),
    .training_set_V_9_we0(Loop_1_proc_U0_training_set_V_9_we0),
    .training_set_V_9_d0(Loop_1_proc_U0_training_set_V_9_d0)
);

Loop_2_proc Loop_2_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Loop_2_proc_U0_ap_start),
    .ap_done(Loop_2_proc_U0_ap_done),
    .ap_continue(Loop_2_proc_U0_ap_continue),
    .ap_idle(Loop_2_proc_U0_ap_idle),
    .ap_ready(Loop_2_proc_U0_ap_ready),
    .num_test_dout(num_test_c_dout),
    .num_test_empty_n(num_test_c_empty_n),
    .num_test_read(Loop_2_proc_U0_num_test_read),
    .global_test_set_V_address0(Loop_2_proc_U0_global_test_set_V_address0),
    .global_test_set_V_ce0(Loop_2_proc_U0_global_test_set_V_ce0),
    .global_test_set_V_q0(global_test_set_V_q0),
    .test_set_V_din(Loop_2_proc_U0_test_set_V_din),
    .test_set_V_full_n(test_set_V_full_n),
    .test_set_V_write(Loop_2_proc_U0_test_set_V_write)
);

Loop_TEST_LOOP_proc2 Loop_TEST_LOOP_proc2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Loop_TEST_LOOP_proc2_U0_ap_start),
    .ap_done(Loop_TEST_LOOP_proc2_U0_ap_done),
    .ap_continue(Loop_TEST_LOOP_proc2_U0_ap_continue),
    .ap_idle(Loop_TEST_LOOP_proc2_U0_ap_idle),
    .ap_ready(Loop_TEST_LOOP_proc2_U0_ap_ready),
    .num_training_dout(num_training_c_dout),
    .num_training_empty_n(num_training_c_empty_n),
    .num_training_read(Loop_TEST_LOOP_proc2_U0_num_training_read),
    .num_test_dout(num_test_c1108_dout),
    .num_test_empty_n(num_test_c1108_empty_n),
    .num_test_read(Loop_TEST_LOOP_proc2_U0_num_test_read),
    .num_test_out_din(Loop_TEST_LOOP_proc2_U0_num_test_out_din),
    .num_test_out_full_n(num_test_c1109_full_n),
    .num_test_out_write(Loop_TEST_LOOP_proc2_U0_num_test_out_write),
    .results_address0(Loop_TEST_LOOP_proc2_U0_results_address0),
    .results_ce0(Loop_TEST_LOOP_proc2_U0_results_ce0),
    .results_we0(Loop_TEST_LOOP_proc2_U0_results_we0),
    .results_d0(Loop_TEST_LOOP_proc2_U0_results_d0),
    .training_set_V_0_address0(Loop_TEST_LOOP_proc2_U0_training_set_V_0_address0),
    .training_set_V_0_ce0(Loop_TEST_LOOP_proc2_U0_training_set_V_0_ce0),
    .training_set_V_0_q0(training_set_V_0_t_q0),
    .training_set_V_1_address0(Loop_TEST_LOOP_proc2_U0_training_set_V_1_address0),
    .training_set_V_1_ce0(Loop_TEST_LOOP_proc2_U0_training_set_V_1_ce0),
    .training_set_V_1_q0(training_set_V_1_t_q0),
    .training_set_V_2_address0(Loop_TEST_LOOP_proc2_U0_training_set_V_2_address0),
    .training_set_V_2_ce0(Loop_TEST_LOOP_proc2_U0_training_set_V_2_ce0),
    .training_set_V_2_q0(training_set_V_2_t_q0),
    .training_set_V_3_address0(Loop_TEST_LOOP_proc2_U0_training_set_V_3_address0),
    .training_set_V_3_ce0(Loop_TEST_LOOP_proc2_U0_training_set_V_3_ce0),
    .training_set_V_3_q0(training_set_V_3_t_q0),
    .training_set_V_4_address0(Loop_TEST_LOOP_proc2_U0_training_set_V_4_address0),
    .training_set_V_4_ce0(Loop_TEST_LOOP_proc2_U0_training_set_V_4_ce0),
    .training_set_V_4_q0(training_set_V_4_t_q0),
    .training_set_V_5_address0(Loop_TEST_LOOP_proc2_U0_training_set_V_5_address0),
    .training_set_V_5_ce0(Loop_TEST_LOOP_proc2_U0_training_set_V_5_ce0),
    .training_set_V_5_q0(training_set_V_5_t_q0),
    .training_set_V_6_address0(Loop_TEST_LOOP_proc2_U0_training_set_V_6_address0),
    .training_set_V_6_ce0(Loop_TEST_LOOP_proc2_U0_training_set_V_6_ce0),
    .training_set_V_6_q0(training_set_V_6_t_q0),
    .training_set_V_7_address0(Loop_TEST_LOOP_proc2_U0_training_set_V_7_address0),
    .training_set_V_7_ce0(Loop_TEST_LOOP_proc2_U0_training_set_V_7_ce0),
    .training_set_V_7_q0(training_set_V_7_t_q0),
    .training_set_V_8_address0(Loop_TEST_LOOP_proc2_U0_training_set_V_8_address0),
    .training_set_V_8_ce0(Loop_TEST_LOOP_proc2_U0_training_set_V_8_ce0),
    .training_set_V_8_q0(training_set_V_8_t_q0),
    .training_set_V_9_address0(Loop_TEST_LOOP_proc2_U0_training_set_V_9_address0),
    .training_set_V_9_ce0(Loop_TEST_LOOP_proc2_U0_training_set_V_9_ce0),
    .training_set_V_9_q0(training_set_V_9_t_q0),
    .test_set_V_dout(test_set_V_dout),
    .test_set_V_empty_n(test_set_V_empty_n),
    .test_set_V_read(Loop_TEST_LOOP_proc2_U0_test_set_V_read)
);

Loop_4_proc Loop_4_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Loop_4_proc_U0_ap_start),
    .ap_done(Loop_4_proc_U0_ap_done),
    .ap_continue(Loop_4_proc_U0_ap_continue),
    .ap_idle(Loop_4_proc_U0_ap_idle),
    .ap_ready(Loop_4_proc_U0_ap_ready),
    .num_test_dout(num_test_c1109_dout),
    .num_test_empty_n(num_test_c1109_empty_n),
    .num_test_read(Loop_4_proc_U0_num_test_read),
    .global_results_address0(Loop_4_proc_U0_global_results_address0),
    .global_results_ce0(Loop_4_proc_U0_global_results_ce0),
    .global_results_we0(Loop_4_proc_U0_global_results_we0),
    .global_results_d0(Loop_4_proc_U0_global_results_d0),
    .results_address0(Loop_4_proc_U0_results_address0),
    .results_ce0(Loop_4_proc_U0_results_ce0),
    .results_q0(results_t_q0)
);

DigitRec_trainingg8j #(
    .DataWidth( 256 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
training_set_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc_U0_training_set_V_0_address0),
    .i_ce0(Loop_1_proc_U0_training_set_V_0_ce0),
    .i_we0(Loop_1_proc_U0_training_set_V_0_we0),
    .i_d0(Loop_1_proc_U0_training_set_V_0_d0),
    .i_q0(training_set_V_0_i_q0),
    .t_address0(Loop_TEST_LOOP_proc2_U0_training_set_V_0_address0),
    .t_ce0(Loop_TEST_LOOP_proc2_U0_training_set_V_0_ce0),
    .t_we0(1'b0),
    .t_d0(256'd0),
    .t_q0(training_set_V_0_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(training_set_V_0_i_full_n),
    .i_write(ap_channel_done_training_set_V_0),
    .t_empty_n(training_set_V_0_t_empty_n),
    .t_read(Loop_TEST_LOOP_proc2_U0_ap_ready)
);

DigitRec_trainingg8j #(
    .DataWidth( 256 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
training_set_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc_U0_training_set_V_1_address0),
    .i_ce0(Loop_1_proc_U0_training_set_V_1_ce0),
    .i_we0(Loop_1_proc_U0_training_set_V_1_we0),
    .i_d0(Loop_1_proc_U0_training_set_V_1_d0),
    .i_q0(training_set_V_1_i_q0),
    .t_address0(Loop_TEST_LOOP_proc2_U0_training_set_V_1_address0),
    .t_ce0(Loop_TEST_LOOP_proc2_U0_training_set_V_1_ce0),
    .t_we0(1'b0),
    .t_d0(256'd0),
    .t_q0(training_set_V_1_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(training_set_V_1_i_full_n),
    .i_write(ap_channel_done_training_set_V_1),
    .t_empty_n(training_set_V_1_t_empty_n),
    .t_read(Loop_TEST_LOOP_proc2_U0_ap_ready)
);

DigitRec_trainingg8j #(
    .DataWidth( 256 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
training_set_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc_U0_training_set_V_2_address0),
    .i_ce0(Loop_1_proc_U0_training_set_V_2_ce0),
    .i_we0(Loop_1_proc_U0_training_set_V_2_we0),
    .i_d0(Loop_1_proc_U0_training_set_V_2_d0),
    .i_q0(training_set_V_2_i_q0),
    .t_address0(Loop_TEST_LOOP_proc2_U0_training_set_V_2_address0),
    .t_ce0(Loop_TEST_LOOP_proc2_U0_training_set_V_2_ce0),
    .t_we0(1'b0),
    .t_d0(256'd0),
    .t_q0(training_set_V_2_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(training_set_V_2_i_full_n),
    .i_write(ap_channel_done_training_set_V_2),
    .t_empty_n(training_set_V_2_t_empty_n),
    .t_read(Loop_TEST_LOOP_proc2_U0_ap_ready)
);

DigitRec_trainingg8j #(
    .DataWidth( 256 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
training_set_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc_U0_training_set_V_3_address0),
    .i_ce0(Loop_1_proc_U0_training_set_V_3_ce0),
    .i_we0(Loop_1_proc_U0_training_set_V_3_we0),
    .i_d0(Loop_1_proc_U0_training_set_V_3_d0),
    .i_q0(training_set_V_3_i_q0),
    .t_address0(Loop_TEST_LOOP_proc2_U0_training_set_V_3_address0),
    .t_ce0(Loop_TEST_LOOP_proc2_U0_training_set_V_3_ce0),
    .t_we0(1'b0),
    .t_d0(256'd0),
    .t_q0(training_set_V_3_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(training_set_V_3_i_full_n),
    .i_write(ap_channel_done_training_set_V_3),
    .t_empty_n(training_set_V_3_t_empty_n),
    .t_read(Loop_TEST_LOOP_proc2_U0_ap_ready)
);

DigitRec_trainingg8j #(
    .DataWidth( 256 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
training_set_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc_U0_training_set_V_4_address0),
    .i_ce0(Loop_1_proc_U0_training_set_V_4_ce0),
    .i_we0(Loop_1_proc_U0_training_set_V_4_we0),
    .i_d0(Loop_1_proc_U0_training_set_V_4_d0),
    .i_q0(training_set_V_4_i_q0),
    .t_address0(Loop_TEST_LOOP_proc2_U0_training_set_V_4_address0),
    .t_ce0(Loop_TEST_LOOP_proc2_U0_training_set_V_4_ce0),
    .t_we0(1'b0),
    .t_d0(256'd0),
    .t_q0(training_set_V_4_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(training_set_V_4_i_full_n),
    .i_write(ap_channel_done_training_set_V_4),
    .t_empty_n(training_set_V_4_t_empty_n),
    .t_read(Loop_TEST_LOOP_proc2_U0_ap_ready)
);

DigitRec_trainingg8j #(
    .DataWidth( 256 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
training_set_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc_U0_training_set_V_5_address0),
    .i_ce0(Loop_1_proc_U0_training_set_V_5_ce0),
    .i_we0(Loop_1_proc_U0_training_set_V_5_we0),
    .i_d0(Loop_1_proc_U0_training_set_V_5_d0),
    .i_q0(training_set_V_5_i_q0),
    .t_address0(Loop_TEST_LOOP_proc2_U0_training_set_V_5_address0),
    .t_ce0(Loop_TEST_LOOP_proc2_U0_training_set_V_5_ce0),
    .t_we0(1'b0),
    .t_d0(256'd0),
    .t_q0(training_set_V_5_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(training_set_V_5_i_full_n),
    .i_write(ap_channel_done_training_set_V_5),
    .t_empty_n(training_set_V_5_t_empty_n),
    .t_read(Loop_TEST_LOOP_proc2_U0_ap_ready)
);

DigitRec_trainingg8j #(
    .DataWidth( 256 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
training_set_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc_U0_training_set_V_6_address0),
    .i_ce0(Loop_1_proc_U0_training_set_V_6_ce0),
    .i_we0(Loop_1_proc_U0_training_set_V_6_we0),
    .i_d0(Loop_1_proc_U0_training_set_V_6_d0),
    .i_q0(training_set_V_6_i_q0),
    .t_address0(Loop_TEST_LOOP_proc2_U0_training_set_V_6_address0),
    .t_ce0(Loop_TEST_LOOP_proc2_U0_training_set_V_6_ce0),
    .t_we0(1'b0),
    .t_d0(256'd0),
    .t_q0(training_set_V_6_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(training_set_V_6_i_full_n),
    .i_write(ap_channel_done_training_set_V_6),
    .t_empty_n(training_set_V_6_t_empty_n),
    .t_read(Loop_TEST_LOOP_proc2_U0_ap_ready)
);

DigitRec_trainingg8j #(
    .DataWidth( 256 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
training_set_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc_U0_training_set_V_7_address0),
    .i_ce0(Loop_1_proc_U0_training_set_V_7_ce0),
    .i_we0(Loop_1_proc_U0_training_set_V_7_we0),
    .i_d0(Loop_1_proc_U0_training_set_V_7_d0),
    .i_q0(training_set_V_7_i_q0),
    .t_address0(Loop_TEST_LOOP_proc2_U0_training_set_V_7_address0),
    .t_ce0(Loop_TEST_LOOP_proc2_U0_training_set_V_7_ce0),
    .t_we0(1'b0),
    .t_d0(256'd0),
    .t_q0(training_set_V_7_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(training_set_V_7_i_full_n),
    .i_write(ap_channel_done_training_set_V_7),
    .t_empty_n(training_set_V_7_t_empty_n),
    .t_read(Loop_TEST_LOOP_proc2_U0_ap_ready)
);

DigitRec_trainingg8j #(
    .DataWidth( 256 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
training_set_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc_U0_training_set_V_8_address0),
    .i_ce0(Loop_1_proc_U0_training_set_V_8_ce0),
    .i_we0(Loop_1_proc_U0_training_set_V_8_we0),
    .i_d0(Loop_1_proc_U0_training_set_V_8_d0),
    .i_q0(training_set_V_8_i_q0),
    .t_address0(Loop_TEST_LOOP_proc2_U0_training_set_V_8_address0),
    .t_ce0(Loop_TEST_LOOP_proc2_U0_training_set_V_8_ce0),
    .t_we0(1'b0),
    .t_d0(256'd0),
    .t_q0(training_set_V_8_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(training_set_V_8_i_full_n),
    .i_write(ap_channel_done_training_set_V_8),
    .t_empty_n(training_set_V_8_t_empty_n),
    .t_read(Loop_TEST_LOOP_proc2_U0_ap_ready)
);

DigitRec_trainingg8j #(
    .DataWidth( 256 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
training_set_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc_U0_training_set_V_9_address0),
    .i_ce0(Loop_1_proc_U0_training_set_V_9_ce0),
    .i_we0(Loop_1_proc_U0_training_set_V_9_we0),
    .i_d0(Loop_1_proc_U0_training_set_V_9_d0),
    .i_q0(training_set_V_9_i_q0),
    .t_address0(Loop_TEST_LOOP_proc2_U0_training_set_V_9_address0),
    .t_ce0(Loop_TEST_LOOP_proc2_U0_training_set_V_9_ce0),
    .t_we0(1'b0),
    .t_d0(256'd0),
    .t_q0(training_set_V_9_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(training_set_V_9_i_full_n),
    .i_write(ap_channel_done_training_set_V_9),
    .t_empty_n(training_set_V_9_t_empty_n),
    .t_read(Loop_TEST_LOOP_proc2_U0_ap_ready)
);

DigitRec_results #(
    .DataWidth( 4 ),
    .AddressRange( 2000 ),
    .AddressWidth( 11 ))
results_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_TEST_LOOP_proc2_U0_results_address0),
    .i_ce0(Loop_TEST_LOOP_proc2_U0_results_ce0),
    .i_we0(Loop_TEST_LOOP_proc2_U0_results_we0),
    .i_d0(Loop_TEST_LOOP_proc2_U0_results_d0),
    .i_q0(results_i_q0),
    .t_address0(Loop_4_proc_U0_results_address0),
    .t_ce0(Loop_4_proc_U0_results_ce0),
    .t_we0(1'b0),
    .t_d0(4'd0),
    .t_q0(results_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(results_i_full_n),
    .i_write(Loop_TEST_LOOP_proc2_U0_ap_done),
    .t_empty_n(results_t_empty_n),
    .t_read(Loop_4_proc_U0_ap_ready)
);

fifo_w32_d2_A num_training_c1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(DigitRec_entry3_U0_num_training_out_din),
    .if_full_n(num_training_c1_full_n),
    .if_write(DigitRec_entry3_U0_num_training_out_write),
    .if_dout(num_training_c1_dout),
    .if_empty_n(num_training_c1_empty_n),
    .if_read(DigitRec_entry28_U0_num_training_read)
);

fifo_w32_d2_A num_test_c2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(DigitRec_entry3_U0_num_test_out_din),
    .if_full_n(num_test_c2_full_n),
    .if_write(DigitRec_entry3_U0_num_test_out_write),
    .if_dout(num_test_c2_dout),
    .if_empty_n(num_test_c2_empty_n),
    .if_read(DigitRec_entry28_U0_num_test_read)
);

fifo_w32_d3_A num_training_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(DigitRec_entry28_U0_num_training_out_din),
    .if_full_n(num_training_c_full_n),
    .if_write(DigitRec_entry28_U0_num_training_out_write),
    .if_dout(num_training_c_dout),
    .if_empty_n(num_training_c_empty_n),
    .if_read(Loop_TEST_LOOP_proc2_U0_num_training_read)
);

fifo_w32_d2_A num_test_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(DigitRec_entry28_U0_num_test_out_din),
    .if_full_n(num_test_c_full_n),
    .if_write(DigitRec_entry28_U0_num_test_out_write),
    .if_dout(num_test_c_dout),
    .if_empty_n(num_test_c_empty_n),
    .if_read(Loop_2_proc_U0_num_test_read)
);

fifo_w32_d3_A num_test_c1108_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(DigitRec_entry28_U0_num_test_out1_din),
    .if_full_n(num_test_c1108_full_n),
    .if_write(DigitRec_entry28_U0_num_test_out1_write),
    .if_dout(num_test_c1108_dout),
    .if_empty_n(num_test_c1108_empty_n),
    .if_read(Loop_TEST_LOOP_proc2_U0_num_test_read)
);

fifo_w256_d2000_A test_set_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_2_proc_U0_test_set_V_din),
    .if_full_n(test_set_V_full_n),
    .if_write(Loop_2_proc_U0_test_set_V_write),
    .if_dout(test_set_V_dout),
    .if_empty_n(test_set_V_empty_n),
    .if_read(Loop_TEST_LOOP_proc2_U0_test_set_V_read)
);

fifo_w32_d2_A num_test_c1109_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_TEST_LOOP_proc2_U0_num_test_out_din),
    .if_full_n(num_test_c1109_full_n),
    .if_write(Loop_TEST_LOOP_proc2_U0_num_test_out_write),
    .if_dout(num_test_c1109_dout),
    .if_empty_n(num_test_c1109_empty_n),
    .if_read(Loop_4_proc_U0_num_test_read)
);

start_for_DigitReqcK start_for_DigitReqcK_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_DigitRec_entry28_U0_din),
    .if_full_n(start_for_DigitRec_entry28_U0_full_n),
    .if_write(DigitRec_entry3_U0_start_write),
    .if_dout(start_for_DigitRec_entry28_U0_dout),
    .if_empty_n(start_for_DigitRec_entry28_U0_empty_n),
    .if_read(DigitRec_entry28_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_DigitRec_entry3_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_DigitRec_entry3_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_DigitRec_entry3_U0_ap_ready <= ap_sync_DigitRec_entry3_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Loop_1_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Loop_1_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Loop_1_proc_U0_ap_ready <= ap_sync_Loop_1_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Loop_2_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Loop_2_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Loop_2_proc_U0_ap_ready <= ap_sync_Loop_2_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_training_set_V_0 <= 1'b0;
    end else begin
        if (((Loop_1_proc_U0_ap_done & Loop_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_training_set_V_0 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_training_set_V_0 <= ap_sync_channel_write_training_set_V_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_training_set_V_1 <= 1'b0;
    end else begin
        if (((Loop_1_proc_U0_ap_done & Loop_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_training_set_V_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_training_set_V_1 <= ap_sync_channel_write_training_set_V_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_training_set_V_2 <= 1'b0;
    end else begin
        if (((Loop_1_proc_U0_ap_done & Loop_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_training_set_V_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_training_set_V_2 <= ap_sync_channel_write_training_set_V_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_training_set_V_3 <= 1'b0;
    end else begin
        if (((Loop_1_proc_U0_ap_done & Loop_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_training_set_V_3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_training_set_V_3 <= ap_sync_channel_write_training_set_V_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_training_set_V_4 <= 1'b0;
    end else begin
        if (((Loop_1_proc_U0_ap_done & Loop_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_training_set_V_4 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_training_set_V_4 <= ap_sync_channel_write_training_set_V_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_training_set_V_5 <= 1'b0;
    end else begin
        if (((Loop_1_proc_U0_ap_done & Loop_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_training_set_V_5 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_training_set_V_5 <= ap_sync_channel_write_training_set_V_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_training_set_V_6 <= 1'b0;
    end else begin
        if (((Loop_1_proc_U0_ap_done & Loop_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_training_set_V_6 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_training_set_V_6 <= ap_sync_channel_write_training_set_V_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_training_set_V_7 <= 1'b0;
    end else begin
        if (((Loop_1_proc_U0_ap_done & Loop_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_training_set_V_7 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_training_set_V_7 <= ap_sync_channel_write_training_set_V_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_training_set_V_8 <= 1'b0;
    end else begin
        if (((Loop_1_proc_U0_ap_done & Loop_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_training_set_V_8 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_training_set_V_8 <= ap_sync_channel_write_training_set_V_8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_training_set_V_9 <= 1'b0;
    end else begin
        if (((Loop_1_proc_U0_ap_done & Loop_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_training_set_V_9 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_training_set_V_9 <= ap_sync_channel_write_training_set_V_9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (1'b0 == DigitRec_entry3_U0_ap_ready))) begin
        DigitRec_entry3_U0_ap_ready_count <= (DigitRec_entry3_U0_ap_ready_count - 2'd1);
    end else if (((1'b1 == DigitRec_entry3_U0_ap_ready) & (ap_sync_ready == 1'b0))) begin
        DigitRec_entry3_U0_ap_ready_count <= (DigitRec_entry3_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (1'b0 == Loop_1_proc_U0_ap_ready))) begin
        Loop_1_proc_U0_ap_ready_count <= (Loop_1_proc_U0_ap_ready_count - 2'd1);
    end else if (((1'b1 == Loop_1_proc_U0_ap_ready) & (ap_sync_ready == 1'b0))) begin
        Loop_1_proc_U0_ap_ready_count <= (Loop_1_proc_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (1'b0 == Loop_2_proc_U0_ap_ready))) begin
        Loop_2_proc_U0_ap_ready_count <= (Loop_2_proc_U0_ap_ready_count - 2'd1);
    end else if (((1'b1 == Loop_2_proc_U0_ap_ready) & (ap_sync_ready == 1'b0))) begin
        Loop_2_proc_U0_ap_ready_count <= (Loop_2_proc_U0_ap_ready_count + 2'd1);
    end
end

assign DigitRec_entry28_U0_ap_continue = 1'b1;

assign DigitRec_entry28_U0_ap_start = start_for_DigitRec_entry28_U0_empty_n;

assign DigitRec_entry28_U0_start_full_n = 1'b1;

assign DigitRec_entry28_U0_start_write = 1'b0;

assign DigitRec_entry3_U0_ap_continue = 1'b1;

assign DigitRec_entry3_U0_ap_start = ((ap_sync_reg_DigitRec_entry3_U0_ap_ready ^ 1'b1) & ap_start);

assign Loop_1_proc_U0_ap_continue = (ap_sync_channel_write_training_set_V_9 & ap_sync_channel_write_training_set_V_8 & ap_sync_channel_write_training_set_V_7 & ap_sync_channel_write_training_set_V_6 & ap_sync_channel_write_training_set_V_5 & ap_sync_channel_write_training_set_V_4 & ap_sync_channel_write_training_set_V_3 & ap_sync_channel_write_training_set_V_2 & ap_sync_channel_write_training_set_V_1 & ap_sync_channel_write_training_set_V_0);

assign Loop_1_proc_U0_ap_start = ((ap_sync_reg_Loop_1_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign Loop_1_proc_U0_start_full_n = 1'b1;

assign Loop_1_proc_U0_start_write = 1'b0;

assign Loop_1_proc_U0_training_set_V_0_full_n = training_set_V_0_i_full_n;

assign Loop_1_proc_U0_training_set_V_1_full_n = training_set_V_1_i_full_n;

assign Loop_1_proc_U0_training_set_V_2_full_n = training_set_V_2_i_full_n;

assign Loop_1_proc_U0_training_set_V_3_full_n = training_set_V_3_i_full_n;

assign Loop_1_proc_U0_training_set_V_4_full_n = training_set_V_4_i_full_n;

assign Loop_1_proc_U0_training_set_V_5_full_n = training_set_V_5_i_full_n;

assign Loop_1_proc_U0_training_set_V_6_full_n = training_set_V_6_i_full_n;

assign Loop_1_proc_U0_training_set_V_7_full_n = training_set_V_7_i_full_n;

assign Loop_1_proc_U0_training_set_V_8_full_n = training_set_V_8_i_full_n;

assign Loop_1_proc_U0_training_set_V_9_full_n = training_set_V_9_i_full_n;

assign Loop_2_proc_U0_ap_continue = 1'b1;

assign Loop_2_proc_U0_ap_start = ((ap_sync_reg_Loop_2_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign Loop_2_proc_U0_start_full_n = 1'b1;

assign Loop_2_proc_U0_start_write = 1'b0;

assign Loop_4_proc_U0_ap_continue = 1'b1;

assign Loop_4_proc_U0_ap_start = results_t_empty_n;

assign Loop_4_proc_U0_start_full_n = 1'b1;

assign Loop_4_proc_U0_start_write = 1'b0;

assign Loop_TEST_LOOP_proc2_U0_ap_continue = results_i_full_n;

assign Loop_TEST_LOOP_proc2_U0_ap_start = (training_set_V_9_t_empty_n & training_set_V_8_t_empty_n & training_set_V_7_t_empty_n & training_set_V_6_t_empty_n & training_set_V_5_t_empty_n & training_set_V_4_t_empty_n & training_set_V_3_t_empty_n & training_set_V_2_t_empty_n & training_set_V_1_t_empty_n & training_set_V_0_t_empty_n);

assign Loop_TEST_LOOP_proc2_U0_results_full_n = results_i_full_n;

assign Loop_TEST_LOOP_proc2_U0_start_full_n = 1'b1;

assign Loop_TEST_LOOP_proc2_U0_start_write = 1'b0;

assign ap_channel_done_results = Loop_TEST_LOOP_proc2_U0_ap_done;

assign ap_channel_done_training_set_V_0 = ((ap_sync_reg_channel_write_training_set_V_0 ^ 1'b1) & Loop_1_proc_U0_ap_done);

assign ap_channel_done_training_set_V_1 = ((ap_sync_reg_channel_write_training_set_V_1 ^ 1'b1) & Loop_1_proc_U0_ap_done);

assign ap_channel_done_training_set_V_2 = ((ap_sync_reg_channel_write_training_set_V_2 ^ 1'b1) & Loop_1_proc_U0_ap_done);

assign ap_channel_done_training_set_V_3 = ((ap_sync_reg_channel_write_training_set_V_3 ^ 1'b1) & Loop_1_proc_U0_ap_done);

assign ap_channel_done_training_set_V_4 = ((ap_sync_reg_channel_write_training_set_V_4 ^ 1'b1) & Loop_1_proc_U0_ap_done);

assign ap_channel_done_training_set_V_5 = ((ap_sync_reg_channel_write_training_set_V_5 ^ 1'b1) & Loop_1_proc_U0_ap_done);

assign ap_channel_done_training_set_V_6 = ((ap_sync_reg_channel_write_training_set_V_6 ^ 1'b1) & Loop_1_proc_U0_ap_done);

assign ap_channel_done_training_set_V_7 = ((ap_sync_reg_channel_write_training_set_V_7 ^ 1'b1) & Loop_1_proc_U0_ap_done);

assign ap_channel_done_training_set_V_8 = ((ap_sync_reg_channel_write_training_set_V_8 ^ 1'b1) & Loop_1_proc_U0_ap_done);

assign ap_channel_done_training_set_V_9 = ((ap_sync_reg_channel_write_training_set_V_9 ^ 1'b1) & Loop_1_proc_U0_ap_done);

assign ap_done = Loop_4_proc_U0_ap_done;

assign ap_idle = ((results_t_empty_n ^ 1'b1) & (training_set_V_9_t_empty_n ^ 1'b1) & (training_set_V_8_t_empty_n ^ 1'b1) & (training_set_V_7_t_empty_n ^ 1'b1) & (training_set_V_6_t_empty_n ^ 1'b1) & (training_set_V_5_t_empty_n ^ 1'b1) & (training_set_V_4_t_empty_n ^ 1'b1) & (training_set_V_3_t_empty_n ^ 1'b1) & (training_set_V_2_t_empty_n ^ 1'b1) & (training_set_V_1_t_empty_n ^ 1'b1) & (training_set_V_0_t_empty_n ^ 1'b1) & Loop_TEST_LOOP_proc2_U0_ap_idle & Loop_4_proc_U0_ap_idle & Loop_2_proc_U0_ap_idle & Loop_1_proc_U0_ap_idle & DigitRec_entry3_U0_ap_idle & DigitRec_entry28_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_DigitRec_entry3_U0_ap_ready = (ap_sync_reg_DigitRec_entry3_U0_ap_ready | DigitRec_entry3_U0_ap_ready);

assign ap_sync_Loop_1_proc_U0_ap_ready = (ap_sync_reg_Loop_1_proc_U0_ap_ready | Loop_1_proc_U0_ap_ready);

assign ap_sync_Loop_2_proc_U0_ap_ready = (ap_sync_reg_Loop_2_proc_U0_ap_ready | Loop_2_proc_U0_ap_ready);

assign ap_sync_channel_write_training_set_V_0 = ((ap_channel_done_training_set_V_0 & Loop_1_proc_U0_training_set_V_0_full_n) | ap_sync_reg_channel_write_training_set_V_0);

assign ap_sync_channel_write_training_set_V_1 = ((ap_channel_done_training_set_V_1 & Loop_1_proc_U0_training_set_V_1_full_n) | ap_sync_reg_channel_write_training_set_V_1);

assign ap_sync_channel_write_training_set_V_2 = ((ap_channel_done_training_set_V_2 & Loop_1_proc_U0_training_set_V_2_full_n) | ap_sync_reg_channel_write_training_set_V_2);

assign ap_sync_channel_write_training_set_V_3 = ((ap_channel_done_training_set_V_3 & Loop_1_proc_U0_training_set_V_3_full_n) | ap_sync_reg_channel_write_training_set_V_3);

assign ap_sync_channel_write_training_set_V_4 = ((ap_channel_done_training_set_V_4 & Loop_1_proc_U0_training_set_V_4_full_n) | ap_sync_reg_channel_write_training_set_V_4);

assign ap_sync_channel_write_training_set_V_5 = ((ap_channel_done_training_set_V_5 & Loop_1_proc_U0_training_set_V_5_full_n) | ap_sync_reg_channel_write_training_set_V_5);

assign ap_sync_channel_write_training_set_V_6 = ((ap_channel_done_training_set_V_6 & Loop_1_proc_U0_training_set_V_6_full_n) | ap_sync_reg_channel_write_training_set_V_6);

assign ap_sync_channel_write_training_set_V_7 = ((ap_channel_done_training_set_V_7 & Loop_1_proc_U0_training_set_V_7_full_n) | ap_sync_reg_channel_write_training_set_V_7);

assign ap_sync_channel_write_training_set_V_8 = ((ap_channel_done_training_set_V_8 & Loop_1_proc_U0_training_set_V_8_full_n) | ap_sync_reg_channel_write_training_set_V_8);

assign ap_sync_channel_write_training_set_V_9 = ((ap_channel_done_training_set_V_9 & Loop_1_proc_U0_training_set_V_9_full_n) | ap_sync_reg_channel_write_training_set_V_9);

assign ap_sync_continue = 1'b1;

assign ap_sync_done = Loop_4_proc_U0_ap_done;

assign ap_sync_ready = (ap_sync_Loop_2_proc_U0_ap_ready & ap_sync_Loop_1_proc_U0_ap_ready & ap_sync_DigitRec_entry3_U0_ap_ready);

assign global_results_address0 = Loop_4_proc_U0_global_results_address0;

assign global_results_address1 = 11'd0;

assign global_results_ce0 = Loop_4_proc_U0_global_results_ce0;

assign global_results_ce1 = 1'b0;

assign global_results_d0 = Loop_4_proc_U0_global_results_d0;

assign global_results_d1 = 8'd0;

assign global_results_we0 = Loop_4_proc_U0_global_results_we0;

assign global_results_we1 = 1'b0;

assign global_test_set_V_address0 = Loop_2_proc_U0_global_test_set_V_address0;

assign global_test_set_V_address1 = 11'd0;

assign global_test_set_V_ce0 = Loop_2_proc_U0_global_test_set_V_ce0;

assign global_test_set_V_ce1 = 1'b0;

assign global_test_set_V_d0 = 256'd0;

assign global_test_set_V_d1 = 256'd0;

assign global_test_set_V_we0 = 1'b0;

assign global_test_set_V_we1 = 1'b0;

assign global_training_set_V_address0 = Loop_1_proc_U0_global_training_set_V_address0;

assign global_training_set_V_address1 = 15'd0;

assign global_training_set_V_ce0 = Loop_1_proc_U0_global_training_set_V_ce0;

assign global_training_set_V_ce1 = 1'b0;

assign global_training_set_V_d0 = 256'd0;

assign global_training_set_V_d1 = 256'd0;

assign global_training_set_V_we0 = 1'b0;

assign global_training_set_V_we1 = 1'b0;

assign start_for_DigitRec_entry28_U0_din = 1'b1;

endmodule //DigitRec
